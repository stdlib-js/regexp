{
  "version": 3,
  "sources": ["../basename-posix/lib/main.js", "../basename-posix/lib/regexp.js", "../basename-posix/lib/index.js", "../basename-windows/lib/main.js", "../basename-windows/lib/regexp.js", "../basename-windows/lib/index.js", "../basename/lib/main.js", "../basename/lib/index.js", "../color-hexadecimal/lib/main.js", "../color-hexadecimal/lib/index.js", "../decimal-number/lib/validate.js", "../decimal-number/lib/main.js", "../decimal-number/lib/regexp_capture.js", "../decimal-number/lib/regexp.js", "../decimal-number/lib/index.js", "../dirname-posix/lib/main.js", "../dirname-posix/lib/regexp.js", "../dirname-posix/lib/index.js", "../dirname-windows/lib/main.js", "../dirname-windows/lib/regexp.js", "../dirname-windows/lib/index.js", "../dirname/lib/main.js", "../dirname/lib/index.js", "../duration-string/lib/main.js", "../duration-string/lib/regexp.js", "../duration-string/lib/index.js", "../eol/lib/validate.js", "../eol/lib/main.js", "../eol/lib/regexp_capture.js", "../eol/lib/regexp.js", "../eol/lib/index.js", "../extended-length-path/lib/main.js", "../extended-length-path/lib/regexp.js", "../extended-length-path/lib/index.js", "../extname-posix/lib/main.js", "../extname-posix/lib/regexp.js", "../extname-posix/lib/index.js", "../extname-windows/lib/main.js", "../extname-windows/lib/regexp.js", "../extname-windows/lib/index.js", "../extname/lib/main.js", "../extname/lib/index.js", "../filename-posix/lib/main.js", "../filename-posix/lib/regexp.js", "../filename-posix/lib/index.js", "../filename-windows/lib/main.js", "../filename-windows/lib/regexp.js", "../filename-windows/lib/index.js", "../filename/lib/main.js", "../filename/lib/index.js", "../function-name/lib/main.js", "../function-name/lib/regexp.js", "../function-name/lib/index.js", "../native-function/lib/main.js", "../native-function/lib/regexp.js", "../native-function/lib/index.js", "../regexp/lib/main.js", "../regexp/lib/regexp.js", "../regexp/lib/index.js", "../reviver/lib/main.js", "../reviver/lib/index.js", "../semver/lib/main.js", "../semver/lib/regexp.js", "../semver/lib/index.js", "../to-json/lib/main.js", "../to-json/lib/index.js", "../unc-path/lib/main.js", "../unc-path/lib/regexp.js", "../unc-path/lib/index.js", "../utf16-surrogate-pair/lib/main.js", "../utf16-surrogate-pair/lib/regexp.js", "../utf16-surrogate-pair/lib/index.js", "../utf16-unpaired-surrogate/lib/main.js", "../utf16-unpaired-surrogate/lib/regexp.js", "../utf16-unpaired-surrogate/lib/index.js", "../whitespace/lib/validate.js", "../whitespace/lib/main.js", "../whitespace/lib/regexp_capture.js", "../whitespace/lib/regexp.js", "../whitespace/lib/index.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture the last part of a POSIX path.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_BASENAME_POSIX = reBasenamePosix();\n* var base = RE_BASENAME_POSIX.exec( 'foo/bar/index.js' )[ 1 ];\n* // returns 'index.js'\n*/\nfunction reBasenamePosix() {\n\treturn /^(?:\\/?|)(?:[\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(?:\\.[^.\\/]*|))(?:[\\/]*)$/; // eslint-disable-line no-useless-escape\n}\n\n\n// EXPORTS //\n\nmodule.exports = reBasenamePosix;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reBasenamePosix = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Captures a POSIX path basename. Modified from Node.js [source][1].\n*\n* Regular expression: `/^(?:\\/?|)(?:[\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(?:\\.[^.\\/]*|))(?:[\\/]*)$/`\n*\n* -   `\\^`\n*     -   match any string which begins with\n*\n* -   `(?:)`\n*     -   capture but do not remember (root)\n*\n* -   `\\/?`\n*     -   match a / literal zero or one time\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (directory)\n*\n* -   `[\\s\\S]`\n*     -   any space or non-space character\n*\n* -   `*?`\n*     -   zero or more times, but non-greedily (shortest possible match)\n*\n* -   `()`\n*     -   capture (basename)\n*\n* -   `\\.{1,2}`\n*     -   match a `.` literal one or two times\n*\n* -   `|`\n*     -   OR\n*\n* -   `[^\\/]+?`\n*     -   match anything which is not a `/` literal one or more times, but do so non-greedily\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (extname)\n*\n* -   `\\.`\n*     -   match a `.` literal\n*\n* -   `[^.\\/]`\n*     -   match anything which is not a `.` or `/` literal\n*\n* -   `*`\n*     -   zero or more times\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (trailing slash)\n*\n* -   `[\\/]`\n*     -   match a `/` literal\n*\n* -   `*`\n*     -   zero or more times\n*\n* -   `$`\n*     -   end of string\n*\n* [1]: https://github.com/nodejs/node/blob/1a3b295d0f46b2189bd853800b1e63ab4d106b66/lib/path.js#L406\n*\n* @constant\n* @type {RegExp}\n* @default /^(?:\\/?|)(?:[\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(?:\\.[^.\\/]*|))(?:[\\/]*)$/\n*/\nvar RE_BASENAME_POSIX = reBasenamePosix();\n\n\n// EXPORTS //\n\nmodule.exports = RE_BASENAME_POSIX;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to capture the last part of a POSIX path.\n*\n* @module @stdlib/regexp/basename-posix\n*\n* @example\n* var reBasenamePosix = require( '@stdlib/regexp/basename-posix' );\n*\n* var RE_BASENAME_POSIX = reBasenamePosix();\n* var base = RE_BASENAME_POSIX.exec( 'foo/bar/index.js' )[ 1 ];\n* // returns 'index.js'\n*\n* @example\n* var reBasenamePosix = require( '@stdlib/regexp/basename-posix' );\n*\n* var base = reBasenamePosix.REGEXP.exec( 'foo/bar/index.js' )[ 1 ]\n* // returns 'index.js'\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture the last part of a Windows path.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE = reBasenameWindows();\n* var base = RE.exec( 'foo\\\\bar\\\\index.js' )[ 1 ];\n* // returns 'index.js'\n*/\nfunction reBasenameWindows() {\n\treturn /^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+|)(?:[\\\\\\/]|)(?:[\\s\\S]*?)((?:\\.{1,2}|[^\\\\\\/]+?|)(?:\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/; // eslint-disable-line no-useless-escape\n}\n\n\n// EXPORTS //\n\nmodule.exports = reBasenameWindows;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reBasenameWindows = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Capture a Windows path basename. Modified from Node.js [source][1].\n*\n* Regular expression: `/^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+|)(?:[\\\\\\/]|)(?:[\\s\\S]*?)((?:\\.{1,2}|[^\\\\\\/]+?|)(?:\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/`\n*\n* -   `^`\n*     -   match any string which begins with\n*\n* -   `(?:)`\n*     -   capture but do not remember (device)\n*\n* -   `[a-zA-Z]:`\n*     -   match any upper or lowercase letter and a `:` literal\n*\n* -   `|`\n*     -   OR\n*\n* -   `[\\\\\\/]`\n*     -   match a `\\` or `/` literal character\n*\n* -   `{2}`\n*     -   exactly `2` times\n*\n* -   `[^\\\\\\/]+`\n*     -   match anything but a `\\` or `/` literal one or more times\n*\n* -   `[\\\\\\/]+`\n*     -   match a `\\` or `/` literal one or more times\n*\n* -   `[^\\\\\\/]+`\n*     -   match anything but a `\\` or `/` literal one or more times\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (slash)\n*\n* -   `[\\\\\\/]`\n*     -   match a `\\` or `/` literal\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (dirname)\n*\n* -   `[\\s\\S]`\n*     -   match any space or non-space character\n*\n* -   `*?`\n*     -   zero or more times but do so non-greedily\n*\n* -   `()`\n*     -   capture (basename)\n*\n* -   `(?:)`\n*     -   capture but do not remember\n*\n* -   `\\.{1,2}`\n*     -   match a `.` literal one or two times\n*\n* -   `|`\n*     -   OR\n*\n* -   `[^\\\\\\/]+?`\n*     -   match anything but a `\\` or `/` literal one or more times, but do so non-greedily\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (extname)\n*\n* -   `\\.`\n*     -   match a `.` literal\n*\n* -   `[^.\\/\\\\]*`\n*     -   match anything but a `.`, `/`, or `\\` literal zero or more times\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (trailing slash)\n*\n* -   `[\\\\\\/]*`\n*     -   match a `\\` or `/` literal zero or more times\n*\n* -   `$`\n*     -   end of string\n*\n* [1]: https://github.com/nodejs/node/blob/1a3b295d0f46b2189bd853800b1e63ab4d106b66/lib/path.js#L65\n*\n* @constant\n* @type {RegExp}\n* @default /^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+|)(?:[\\\\\\/]|)(?:[\\s\\S]*?)((?:\\.{1,2}|[^\\\\\\/]+?|)(?:\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/\n*/\nvar RE_BASENAME_WINDOWS = reBasenameWindows();\n\n\n// EXPORTS //\n\nmodule.exports = RE_BASENAME_WINDOWS;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to capture the last part of a Windows path.\n*\n* @module @stdlib/regexp/basename-windows\n*\n* @example\n* var reBasenameWindows = require( '@stdlib/regexp/basename-windows' );\n* var RE_BASENAME_WINDOWS = reBasenameWindows();\n*\n* var base = RE_BASENAME_WINDOWS.exec( 'foo\\\\bar\\\\index.js' )[ 1 ];\n* // returns 'index.js'\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar contains = require( '@stdlib/assert/contains' );\nvar format = require( '@stdlib/string/format' );\nvar posix = require( './../../basename-posix' );\nvar win32 = require( './../../basename-windows' );\nvar IS_WINDOWS = require( '@stdlib/assert/is-windows' );\n\n\n// VARIABLES //\n\nvar PLATFORMS = [ 'posix', 'win32' ];\n\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture the last part of a path.\n*\n* @param {string} [platform] - path platform (`win32` or `posix`)\n* @throws {Error} platform must be `win32` or `posix`\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE = reBasename();\n* var base = RE.exec( '/foo/bar/index.js' )[ 1 ];\n* // returns <string>\n*/\nfunction reBasename( platform ) {\n\tif ( arguments.length > 0 ) {\n\t\tif ( !contains( PLATFORMS, platform ) ) {\n\t\t\tthrow new Error( format( 'invalid argument. Must be one of the following: \"%s\". Value: `%s`.', PLATFORMS.join( '\", \"' ), platform ) );\n\t\t}\n\t}\n\tif ( platform === 'win32' || IS_WINDOWS ) {\n\t\treturn win32();\n\t}\n\t// Case: platform === 'posix'\n\treturn posix();\n}\n\n\n// EXPORTS //\n\nmodule.exports = reBasename;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to capture the last part of a path.\n*\n* @module @stdlib/regexp/basename\n*\n* @example\n* var reBasename = require( '@stdlib/regexp/basename' );\n* var RE_BASENAME = reBasename();\n*\n* // On a POSIX platform...\n* var base = RE_BASENAME.exec( '/foo/bar/index.js' )[ 1 ];\n* // returns 'index.js'\n*\n* @example\n* var reBasename = require( '@stdlib/regexp/basename' );\n* var RE_BASENAME = reBasename();\n*\n* // On a Windows platform...\n* var base = RE_BASENAME.exec( 'C:\\\\foo\\\\bar\\\\index.js' )[ 1 ];\n* // returns 'index.js'\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar posix = require( './../../basename-posix' ).REGEXP;\nvar win32 = require( './../../basename-windows' ).REGEXP;\nvar IS_WINDOWS = require( '@stdlib/assert/is-windows' );\nvar main = require( './main.js' );\n\n\n// VARIABLES //\n\nvar REGEXP = ( IS_WINDOWS ) ? win32 : posix;\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\nsetReadOnly( main, 'REGEXP_POSIX', posix );\nsetReadOnly( main, 'REGEXP_WIN32', win32 );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar contains = require( '@stdlib/assert/contains' );\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar MODES = [ 'full', 'shorthand', 'either' ];\n\n\n// MAIN //\n\n/**\n* Returns a regular expression to match a hexadecimal color.\n*\n* @param {string} [mode='full'] - color format (`full`, `shorthand`, or `either`)\n* @throws {Error} mode must be `full`, `shorthand`, or `either`\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE = reColorHexadecimal();\n* // returns <RegExp>\n*\n* var bool = RE.test( 'ffffff' );\n* // returns true\n*\n* bool = RE.test( '000' );\n* // returns false\n*/\nfunction reColorHexadecimal( mode ) {\n\tif ( arguments.length > 0 ) {\n\t\tif ( !contains( MODES, mode ) ) {\n\t\t\tthrow new Error( format( 'invalid argument. Mode must be one of the following: \"%s\". Value: `%s`.', MODES.join( '\", \"' ), mode ) );\n\t\t}\n\t}\n\tif ( mode === 'shorthand' ) {\n\t\treturn /^[0-9A-F]{3}$/i;\n\t}\n\tif ( mode === 'either' ) {\n\t\treturn /^[0-9A-F]{3}$|^[0-9A-F]{6}$/i;\n\t}\n\t// Case: mode === 'full'\n\treturn /^[0-9A-F]{6}$/i;\n}\n\n\n// EXPORTS //\n\nmodule.exports = reColorHexadecimal;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to match a hexadecimal color.\n*\n* @module @stdlib/regexp/color-hexadecimal\n*\n* @example\n* var reColorHexadecimal = require( '@stdlib/regexp/color-hexadecimal' );\n* var RE_COLOR_HEXADECIMAL = reColorHexadecimal();\n*\n* var bool = RE_COLOR_HEXADECIMAL.test( '474747' );\n* // returns true\n*\n* bool = RE_COLOR_HEXADECIMAL.test( 'ZZZZZZ' );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Match any `3` or `6` letter character sequence only containing numbers or the letters `A-Fa-f`.\n*\n* Regular expression: `/^[0-9A-F]{3}$|^[0-9A-F]{6}$/i`\n*\n* -   `/^`\n*     -   match anything that begins with\n*\n* -   `[0-9A-F]`\n*     -   match anything that contains the numbers `0-9` and/or the letters `A-F`\n*\n* -   `{3}`\n*     -   exactly three matched characters\n*\n* -   `$`\n*     -   end of character sequence\n*\n* -   `|`\n*     -   or\n*\n* -   `^`\n*     -   match anything that begins with\n*\n* -   `[0-9A-F]`\n*     -   match anything that contains the numbers `0-9` and/or the letters `A-F`\n*\n* -   `{6}`\n*     -   exactly six matched characters\n*\n* -   `$`\n*     -   end of character sequence\n*\n* -   `/i`\n*     -   ignore case\n*\n* @constant\n* @type {RegExp}\n* @default /^[0-9A-F]{3}$|^[0-9A-F]{6}$/i\n*/\nvar RE_COLOR_HEXADECIMAL_EITHER = /^[0-9A-F]{3}$|^[0-9A-F]{6}$/i;\n\n// Same as above but only for 3 letter sequences:\nvar RE_COLOR_HEXADECIMAL_SHORTHAND = /^[0-9A-F]{3}$/i;\n\n// Same as above but only for 6 letter sequences:\nvar RE_COLOR_HEXADECIMAL = /^[0-9A-F]{6}$/i;\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', RE_COLOR_HEXADECIMAL );\nsetReadOnly( main, 'REGEXP_SHORTHAND', RE_COLOR_HEXADECIMAL_SHORTHAND );\nsetReadOnly( main, 'REGEXP_EITHER', RE_COLOR_HEXADECIMAL_EITHER );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {string} [options.flags] - regular expression flags\n* @param {boolean} [options.capture] - boolean indicating whether to wrap a regular expression matching a decimal number with a capture group\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'flags': 'gm'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'flags' ) ) {\n\t\topts.flags = options.flags;\n\t\tif ( !isString( opts.flags ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'flags', opts.flags ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'capture' ) ) {\n\t\topts.capture = options.capture;\n\t\tif ( !isBoolean( opts.capture ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'capture', opts.capture ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar validate = require( './validate.js' );\n\n\n// VARIABLES //\n\nvar REGEXP_STRING = '[-+]{0,1}[0-9]*\\\\.[0-9]+';\n\n\n// MAIN //\n\n/**\n* Returns a regular expression to match a decimal number.\n*\n* @param {Options} [options] - function options\n* @param {string} [options.flags=''] - regular expression flags\n* @param {boolean} [options.capture=false] - boolean indicating whether to create a capture group for the match\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_DECIMAL_NUMBER = reDecimalNumber();\n*\n* var bool = RE_DECIMAL_NUMBER.test( 'beep 1.0 boop' );\n* // returns true\n*\n* @example\n* var RE_DECIMAL_NUMBER = reDecimalNumber({\n*     'flags': 'gm'\n* });\n* var bool = RE_DECIMAL_NUMBER.test( 'beep 1.0 boop' );\n* // returns true\n*/\nfunction reDecimalNumber( options ) {\n\tvar opts;\n\tvar err;\n\tif ( arguments.length > 0 ) {\n\t\topts = {};\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tif ( opts.capture ) {\n\t\t\treturn new RegExp( '('+REGEXP_STRING+')', opts.flags );\n\t\t}\n\t\treturn new RegExp( REGEXP_STRING, opts.flags );\n\t}\n\treturn /[-+]{0,1}[0-9]*\\.[0-9]+/;\n}\n\n\n// EXPORTS //\n\nmodule.exports = reDecimalNumber;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reDecimalNumber = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Captures a decimal number.\n*\n* Regular expression: `/([-+]{0,1}[0-9]*\\.[0-9]+)/`\n*\n* -   `()`\n*     -   capture\n*\n* -   `[-+]{0,1}`\n*     -   match a minus or plus sign zero or one time\n*\n* -   `[0-9]*`\n*     -   match the characters `[0-9]` zero or more times\n*\n* -   `\\.`\n*     -   match a `.` literal\n*\n* -   `[0-9]+`\n*     -   match the characters `[0-9]` one or more times\n*\n*\n @constant\n* @type {RegExp}\n* @default /([-+]{0,1}[0-9]*\\.[0-9]+)/\n*/\nvar REGEXP_CAPTURE = reDecimalNumber({\n\t'capture': true\n});\n\n\n// EXPORTS //\n\nmodule.exports = REGEXP_CAPTURE;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reDecimalNumber = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Matches a decimal number.\n*\n* Regular expression: `/[-+]{0,1}[0-9]*\\.[0-9]+/`\n*\n* -   `[-+]{0,1}`\n*     -   match a minus or plus sign zero or one time\n*\n* -   `[0-9]*`\n*     -   match the characters `[0-9]` zero or more times\n*\n* -   `\\.`\n*     -   match a `.` literal\n*\n* -   `[0-9]+`\n*     -   match the characters `[0-9]` one or more times\n*\n*\n @constant\n* @type {RegExp}\n* @default /[-+]{0,1}[0-9]*\\.[0-9]+/\n*/\nvar REGEXP = reDecimalNumber();\n\n\n// EXPORTS //\n\nmodule.exports = REGEXP;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to match a decimal number.\n*\n* @module @stdlib/regexp/decimal-number\n*\n* @example\n* var reDecimalNumber = require( '@stdlib/regexp/decimal-number' );\n*\n* var RE_DECIMAL_NUMBER = reDecimalNumber();\n*\n* var bool = RE_DECIMAL_NUMBER.test( 'beep 1.0 boop' );\n* // returns true\n*\n* bool = RE_DECIMAL_NUMBER.test( 'beep 1 boop' );\n* // returns false\n*\n* @example\n* var reDecimalNumber = require( '@stdlib/regexp/decimal-number' );\n*\n* var RE_DECIMAL_NUMBER = reDecimalNumber({\n*     'flags': 'gm'\n* });\n* var bool = RE_DECIMAL_NUMBER.test( 'beep 1.0 boop' );\n* // returns true\n*\n* @example\n* var reDecimalNumber = require( '@stdlib/regexp/decimal-number' );\n*\n* var bool = reDecimalNumber.REGEXP.test( '2:3' );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar REGEXP_CAPTURE = require( './regexp_capture.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\nsetReadOnly( main, 'REGEXP_CAPTURE', REGEXP_CAPTURE );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture a POSIX path dirname.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_DIRNAME_POSIX = reDirnamePosix();\n* var dir = RE_DIRNAME_POSIX.exec( 'foo/bar/index.js' )[ 1 ];\n* // returns 'foo/bar'\n*/\nfunction reDirnamePosix() {\n\treturn /^((?:\\.(?![^\\/]))|(?:(?:\\/?|)(?:[\\s\\S]*?)))(?:\\/+?|)(?:(?:\\.{1,2}|[^\\/]+?|)(?:\\.[^.\\/]*|))(?:[\\/]*)$/; // eslint-disable-line no-useless-escape\n}\n\n\n// EXPORTS //\n\nmodule.exports = reDirnamePosix;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reDirnamePosix = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Captures a POSIX path dirname. Modified from Node.js [source][1].\n*\n* Regular expression: `/^((?:\\.(?![^\\/]))|(?:(?:\\/?|)(?:[\\s\\S]*?)))(?:\\/+?|)(?:(?:\\.{1,2}|[^\\/]+?|)(?:\\.[^.\\/]*|))(?:[\\/]*)$/`\n*\n* -   `\\^`\n*     -   match any string which begins with\n*\n* -   `()`\n*     -   capture (includes root and dirname)\n*\n* -   `(?:)`\n*     -   capture but do not remember (handles `'.'` and `'./'` cases)\n*\n* -   `\\.(?![^\\/])`\n*     -   a `.` literal if the `.` literal is NOT followed by something other than a `/` literal\n*\n* -   `|`\n*     -   OR\n*\n* -   `(?:)`\n*     -   capture but do not remember (handles root+dirname case)\n*\n* -   `(?:)`\n*     -   capture but do not remember (root)\n*\n* -   `\\/?`\n*     -   match a `/` literal zero or one time\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (directory)\n*\n* -   `[\\s\\S]`\n*     -   any space or non-space character\n*\n* -   `*?`\n*     -   zero or more times, but non-greedily (shortest possible match)\n*\n* -   `(?:)`\n*     -   capture but do not remember (slash)\n*\n* -   `\\/+?`\n*     -   a `/` literal one or more times, but do so non-greedily\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (basename)\n*\n* -   `\\.{1,2}`\n*     -   match a `.` literal one or two times\n*\n* -   `|`\n*     -   OR\n*\n* -   `[^\\/]+?`\n*     -   match anything which is not a `/` literal one or more times, but do so non-greedily\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (extname)\n*\n* -   `\\.`\n*     -   match a `.` literal\n*\n* -   `[^.\\/]`\n*     -   match anything which is not a `.` or `/` literal\n*\n* -   `*`\n*     -   zero or more times\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (trailing slash)\n*\n* -   `[\\/]`\n*     -   match a `/` literal\n*\n* -   `*`\n*     -   zero or more times\n*\n* -   `$`\n*     -   end of string\n*\n* [1]: https://github.com/nodejs/node/blob/1a3b295d0f46b2189bd853800b1e63ab4d106b66/lib/path.js#L406\n*\n* @constant\n* @type {RegExp}\n* @default /^((?:\\.(?![^\\/]))|(?:(?:\\/?|)(?:[\\s\\S]*?)))(?:\\/+?|)(?:(?:\\.{1,2}|[^\\/]+?|)(?:\\.[^.\\/]*|))(?:[\\/]*)$/\n*/\nvar RE_DIRNAME_POSIX = reDirnamePosix();\n\n\n// EXPORTS //\n\nmodule.exports = RE_DIRNAME_POSIX;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to capture a POSIX path dirname.\n*\n* @module @stdlib/regexp/dirname-posix\n*\n* @example\n* var reDirnamePosix = require( '@stdlib/regexp/dirname-posix' );\n*\n* var RE_DIRNAME_POSIX = reDirnamePosix();\n* var dir = RE_DIRNAME_POSIX.exec( 'foo/bar/index.js' )[ 1 ];\n* // returns 'foo/bar'\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture a Windows path dirname.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_DIRNAME_WINDOWS = reDirnameWindows();\n* var dir = RE_DIRNAME_WINDOWS.exec( 'foo\\\\bar\\\\index.js' )[ 1 ];\n* // returns 'foo\\bar'\n*/\nfunction reDirnameWindows() {\n\treturn /^((?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+|)(?:[\\\\\\/]|)(?:[\\s\\S]*?))(?:[\\\\\\/]+?|)(?:(?:\\.{1,2}|[^\\\\\\/]+?|)(?:\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/; // eslint-disable-line no-useless-escape\n}\n\n\n// EXPORTS //\n\nmodule.exports = reDirnameWindows;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reDirnameWindows = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Regular expression to capture a Windows path dirname. Modified from Node.js [source][1].\n*\n* Regular expression: `/^((?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+|)(?:[\\\\\\/]|)(?:[\\s\\S]*?))(?:[\\\\\\/]+?|)(?:(?:\\.{1,2}|[^\\\\\\/]+?|)(?:\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/`\n*\n* -   `^`\n*     -   match any string which begins with\n*\n* -   `()`\n*     -   capture (includes the device, slash, and dirname)\n*\n* -   `(?:)`\n*     -   capture but do not remember (device)\n*\n* -   `[a-zA-Z]:`\n*     -   match any upper or lowercase letter and a `:` literal\n*\n* -   `|`\n*     -   OR\n*\n* -   `[\\\\\\/]`\n*     -   match a `\\` or `/` literal character\n*\n* -   `{2}`\n*     -   exactly two times\n*\n* -   `[^\\\\\\/]+`\n*     -   match anything but a `\\` or `/` literal one or more times\n*\n* -   `[\\\\\\/]+`\n*     -   match a `\\` or `/` literal one or more times\n*\n* -   `[^\\\\\\/]+`\n*     -   match anything but a `\\` or `/` literal one or more times\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (slash)\n*\n* -   `[\\\\\\/]`\n*     -   match a `\\` or `/` literal\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (dirname)\n*\n* -   `[\\s\\S]`\n*     -   match any space or non-space character\n*\n* -   `*?`\n*     -   zero or more times but do so non-greedily\n*\n* -   `(?:)`\n*     -   capture but do not remember (slash before basename)\n*\n* -   `[\\\\\\/]+?`\n*     -   match a `\\` or `/` literal one or more times, but do so non-greedily\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (basename)\n*\n* -   `(?:)`\n*     -   capture but do not remember\n*\n* -   `\\.{1,2}`\n*     -   match a `.` literal one or two times\n*\n* -   `|`\n*     -   OR\n*\n* -   `[^\\\\\\/]+?`\n*     -   match anything but a `\\` or `/` literal one or more times, but do so non-greedily\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (extname)\n*\n* -   `\\.`\n*     -   match a `.` literal\n*\n* -   `[^.\\/\\\\]*`\n*     -   match anything but a `.`, `/`, or `\\` literal zero or more times\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (trailing slash)\n*\n* -   `[\\\\\\/]*`\n*     -   match a `\\` or `/` literal zero or more times\n*\n* -   `$`\n*     -   end of string\n*\n* [1]: https://github.com/nodejs/node/blob/1a3b295d0f46b2189bd853800b1e63ab4d106b66/lib/path.js#L65\n*\n* @constant\n* @type {RegExp}\n* @default /^((?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+|)(?:[\\\\\\/]|)(?:[\\s\\S]*?))(?:[\\\\\\/]+?|)(?:(?:\\.{1,2}|[^\\\\\\/]+?|)(?:\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/\n*/\nvar RE_DIRNAME_WINDOWS = reDirnameWindows();\n\n\n// EXPORTS //\n\nmodule.exports = RE_DIRNAME_WINDOWS;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to capture a Windows path dirname.\n*\n* @module @stdlib/regexp/dirname-windows\n*\n* @example\n* var reDirnameWindows = require( '@stdlib/regexp/dirname-windows' );\n*\n* var RE_DIRNAME_WINDOWS = reDirnameWindows();\n* var dir = RE_DIRNAME_WINDOWS.exec( 'foo\\\\bar\\\\index.js' )[ 1 ];\n* // returns 'foo\\bar'\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar contains = require( '@stdlib/assert/contains' );\nvar format = require( '@stdlib/string/format' );\nvar posix = require( './../../dirname-posix' );\nvar win32 = require( './../../dirname-windows' );\nvar IS_WINDOWS = require( '@stdlib/assert/is-windows' );\n\n\n// VARIABLES //\n\nvar PLATFORMS = [ 'posix', 'win32' ];\n\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture a path dirname.\n*\n* @param {string} [platform] - path platform (`win32` or `posix`)\n* @throws {Error} platform must be `win32` or `posix`\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE = reDirname();\n* var dir = RE.exec( '/foo/bar/index.js' )[ 1 ];\n* // returns <string>\n*/\nfunction reDirname( platform ) {\n\tif ( arguments.length > 0 ) {\n\t\tif ( !contains( PLATFORMS, platform ) ) {\n\t\t\tthrow new Error( format( 'invalid argument.  Must be one of the following: \"%s\". Value: `%s`.', PLATFORMS.join( '\", \"' ), platform ) );\n\t\t}\n\t}\n\tif ( platform === 'win32' || IS_WINDOWS ) {\n\t\treturn win32();\n\t}\n\t// Case: platform === 'posix'\n\treturn posix();\n}\n\n\n// EXPORTS //\n\nmodule.exports = reDirname;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to capture a path dirname.\n*\n* @module @stdlib/regexp/dirname\n*\n* @example\n* var reDirname = require( '@stdlib/regexp/dirname' );\n* var RE_DIRNAME = reDirname();\n*\n* // On a POSIX platform...\n* var dir = RE_DIRNAME.exec( '/foo/bar/index.js' )[ 1 ];\n* // returns '/foo/bar'\n*\n* @example\n* var reDirname = require( '@stdlib/regexp/dirname' );\n* var RE_DIRNAME = reDirname();\n*\n* // On a Windows platform...\n* var dir = RE_DIRNAME.exec( 'C:\\\\foo\\\\bar\\\\index.js' )[ 1 ];\n* // returns 'C:\\foo\\bar'\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar posix = require( './../../dirname-posix' ).REGEXP;\nvar win32 = require( './../../dirname-windows' ).REGEXP;\nvar IS_WINDOWS = require( '@stdlib/assert/is-windows' );\nvar main = require( './main.js' );\n\n\n// VARIABLES //\n\nvar REGEXP = ( IS_WINDOWS ) ? win32 : posix;\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\nsetReadOnly( main, 'REGEXP_POSIX', posix );\nsetReadOnly( main, 'REGEXP_WIN32', win32 );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to match a duration string.\n*\n* ## Notes\n*\n* -   A duration string is a string containing a sequence of time units. A time unit is a nonnegative integer followed by a unit identifier. The following unit identifiers are supported:\n*\n*     -   `d`: days\n*     -   `h`: hours\n*     -   `m`: minutes\n*     -   `s`: seconds\n*     -   `ms`: milliseconds\n*\n*     For example, the string `1m3s10ms` is a duration string containing three time units: `1m` (1 minute), `3s` (3 seconds), and `10ms` (10 milliseconds). The string `60m` is a duration string containing a single time unit: `60m` (60 minutes). Time units must be supplied in descending order of magnitude (i.e., days, hours, minutes, seconds, milliseconds).\n*\n* -   Duration strings are case insensitive. For example, the string `1M3S10MS` is equivalent to `1m3s10ms`.\n*\n* -   The regular expression captures the following groups:\n*\n*     1.  The days component.\n*     2.  The hours component.\n*     3.  The minutes component.\n*     4.  The seconds component.\n*     5.  The milliseconds component.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_DURATION = reDurationString();\n* // returns <RegExp>\n*/\nfunction reDurationString() {\n\treturn /^(\\d+d)?(\\d+h)?(\\d+m)?(\\d+s)?(\\d+ms)?$/i;\n}\n\n\n// EXPORTS //\n\nmodule.exports = reDurationString;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reDurationString = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Matches a duration string.\n*\n* Regular Expression: `/^(\\d+d)?(\\d+h)?(\\d+m)?(\\d+s)?(\\d+ms)?$/`\n*\n* -   `^`\n*     -   start of input\n*\n* -   `(\\d+d)?`\n*     -   capture a group of one or more digits followed by the literal character `d` for the number of days (optional)\n\n* -   `(\\d+h)?`\n*     -   capture a group of one or more digits followed by the literal character `h` for the number of hours (optional)\n\n* -   `(\\d+m)?`\n*     -   capture a group of one or more digits followed by the literal character `m` for the number of minutes (optional)\n\n* -   `(\\d+s)?`\n*     -   capture a group of one or more digits followed by the literal character `s` for the number of seconds (optional)\n\n* -   `(\\d+ms)?`\n*     -   capture a group of one or more digits followed by the literal character `ms` for the number of milliseconds (optional)\n*\n* -   `$`\n*     -   end of input\n*\n* @constant\n* @type {RegExp}\n* @default /^(\\d+d)?(\\d+h)?(\\d+m)?(\\d+s)?(\\d+ms)?$/\n*/\nvar RE_DURATION = reDurationString();\n\n\n// EXPORTS //\n\nmodule.exports = RE_DURATION;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to match a duration string.\n*\n* @module @stdlib/regexp/duration-string\n*\n* @example\n* var reDurationString = require( '@stdlib/regexp/duration-string' );\n*\n* var RE_DURATION = reDurationString();\n* // returns <RegExp>\n*\n* var parts = RE_DURATION.exec( '3d2ms' );\n* // returns [...]\n*\n* parts = RE_DURATION.exec( '2ms' );\n* // returns [...]\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {string} [options.flags] - regular expression flags\n* @param {boolean} [options.capture] - boolean indicating whether to wrap a regular expression matching a decimal number with a capture group\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'flags': 'gm'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'flags' ) ) {\n\t\topts.flags = options.flags;\n\t\tif ( !isString( opts.flags ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'flags', opts.flags ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'capture' ) ) {\n\t\topts.capture = options.capture;\n\t\tif ( !isBoolean( opts.capture ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'capture', opts.capture ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar validate = require( './validate.js' );\n\n\n// VARIABLES //\n\nvar REGEXP_STRING = '\\\\r?\\\\n';\n\n\n// MAIN //\n\n/**\n* Returns a regular expression to match a newline character sequence.\n*\n* @param {Options} [options] - function options\n* @param {string} [options.flags=''] - regular expression flags\n* @param {boolean} [options.capture=false] - boolean indicating whether to create a capture group for the match\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_EOL = reEOL();\n* var bool = RE_EOL.test( '\\r\\n' );\n* // returns true\n*\n* @example\n* var replace = require( '@stdlib/string/replace' );\n*\n* var RE_EOL = reEOL({\n*     'flags': 'g'\n* });\n* var str = '1\\n2\\n3';\n* var out = replace( str, RE_EOL, '' );\n*/\nfunction reEOL( options ) {\n\tvar opts;\n\tvar err;\n\tif ( arguments.length > 0 ) {\n\t\topts = {};\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tif ( opts.capture ) {\n\t\t\treturn new RegExp( '('+REGEXP_STRING+')', opts.flags );\n\t\t}\n\t\treturn new RegExp( REGEXP_STRING, opts.flags );\n\t}\n\treturn /\\r?\\n/;\n}\n\n\n// EXPORTS //\n\nmodule.exports = reEOL;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reEOL = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Captures a newline character sequence.\n*\n* Regular expression: `/\\r?\\n/`\n*\n* -   `()`\n*     -   capture\n*\n* -   `\\r?`\n*     -   match a carriage return character (optional)\n*\n* -   `\\n`\n*     -   match a line feed character\n*\n* @constant\n* @type {RegExp}\n* @default /(\\r?\\n)/\n*/\nvar REGEXP_CAPTURE = reEOL({\n\t'capture': true\n});\n\n\n// EXPORTS //\n\nmodule.exports = REGEXP_CAPTURE;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reEOL = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Matches a newline character sequence.\n*\n* Regular expression: `/\\r?\\n/`\n*\n* -   `\\r?`\n*     -   match a carriage return character (optional)\n*\n* -   `\\n`\n*     -   match a line feed character\n*\n* @constant\n* @type {RegExp}\n* @default /\\r?\\n/\n*/\nvar REGEXP = reEOL();\n\n\n// EXPORTS //\n\nmodule.exports = REGEXP;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to match a newline character sequence.\n*\n* @module @stdlib/regexp/eol\n*\n* @example\n* var reEOL = require( '@stdlib/regexp/eol' );\n* var RE_EOL = reEOL();\n*\n* var bool = RE_EOL.test( '\\n' );\n* // returns true\n*\n* bool = RE_EOL.test( '\\\\r\\\\n' );\n* // returns false\n*\n* @example\n* var reEOL = require( '@stdlib/regexp/eol' );\n* var replace = require( '@stdlib/string/replace' );\n*\n* var RE_EOL = reEOL({\n*     'flags': 'g'\n* });\n* var str = '1\\n2\\n3';\n* var out = replace( str, RE_EOL, '' );\n*\n* @example\n* var reEOL = require( '@stdlib/regexp/eol' );\n* var bool = reEOL.REGEXP.test( '\\r\\n' );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar REGEXP_CAPTURE = require( './regexp_capture.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\nsetReadOnly( main, 'REGEXP_CAPTURE', REGEXP_CAPTURE );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression that matches an extended-length path.\n*\n* @returns {RegExp} regular expression\n*/\nfunction reExtendedLengthPath() {\n\treturn /^\\\\\\\\\\?\\\\.+/;\n}\n\n\n// EXPORTS //\n\nmodule.exports = reExtendedLengthPath;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reExtendedLengthPath = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Matches an extended-length path.\n*\n* Regular Expression: `/^\\\\\\\\\\?\\\\.+/`\n*\n* -   `/^\\\\\\\\?\\\\`\n*     -   match a string that begins with two backward slashes `\\\\\\\\` followed by a `?` and then a backward slash `\\\\`\n*\n* -   `.+`\n*     -   match any character which occurs one or more times\n*\n* @constant\n* @type {RegExp}\n* @default /^\\\\\\\\\\?\\\\.+/\n* @see [MSDN]{@link https://msdn.microsoft.com/en-us/library/windows/desktop/aa365247(v=vs.85).aspx}\n*/\nvar REGEXP = reExtendedLengthPath();\n\n\n// EXPORTS //\n\nmodule.exports = REGEXP;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to test if a string is an extended-length path.\n*\n* @module @stdlib/regexp/extended-length-path\n*\n* @example\n* var reExtendedLengthPath = require( '@stdlib/regexp/extended-length-path' );\n* var RE_EXTENDED_LENGTH_PATH = reExtendedLengthPath();\n*\n* var bool = RE_EXTENDED_LENGTH_PATH.test( '\\\\\\\\?\\\\C:\\\\foo\\\\bar' );\n* // returns true\n*\n* bool = RE_EXTENDED_LENGTH_PATH.test( 'C:\\\\foo\\\\bar' );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture a POSIX filename extension.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_EXTNAME_POSIX = reExtnamePosix();\n* var ext = RE_EXTNAME_POSIX.exec( 'index.js' )[ 1 ];\n* // returns '.js'\n*/\nfunction reExtnamePosix() {\n\treturn /^(?:\\/?|)(?:[\\s\\S]*?)(?:(?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/; // eslint-disable-line no-useless-escape\n}\n\n\n// EXPORTS //\n\nmodule.exports = reExtnamePosix;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reExtnamePosix = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Captures a POSIX filename extension.  Modified from Node.js [source][1].\n*\n* Regular expression: `/^(?:\\/?|)(?:[\\s\\S]*?)(?:(?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/`\n*\n* -   `\\^`\n*     -   match any string which begins with\n*\n* -   `(?:)`\n*     -   capture but do not remember (root)\n*\n* -   `\\/?`\n*     -   match a `/` literal zero or one time\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (directory)\n*\n* -   `[\\s\\S]`\n*     -   any space or non-space character\n*\n* -   `*?`\n*     -   zero or more times, but non-greedily (shortest possible match)\n*\n* -   `(?:)`\n*     -   capture but do not remember (basename)\n*\n* -   `\\.{1,2}`\n*     -   match a `.` literal one or two times\n*\n* -   `|`\n*     -   OR\n*\n* -   `[^\\/]+?`\n*     -   match anything which is not a `/` literal one or more times, but do so non-greedily\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `()`\n*     -   capture\n*\n* -   `\\.`\n*     -   match a `.` literal\n*\n* -   `[^.\\/]`\n*     -   match anything which is not a `.` or `/` literal\n*\n* -   `*`\n*     -   zero or more times\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (trailing slash)\n*\n* -   `[\\/]`\n*     -   match a `/` literal\n*\n* -   `*`\n*     -   zero or more times\n*\n* -   `$`\n*     -   end of string\n*\n* [1]: https://github.com/nodejs/node/blob/1a3b295d0f46b2189bd853800b1e63ab4d106b66/lib/path.js#L406\n*\n* @constant\n* @type {RegExp}\n* @default /^(?:\\/?|)(?:[\\s\\S]*?)(?:(?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/\n*/\nvar RE_EXTNAME_POSIX = reExtnamePosix();\n\n\n// EXPORTS //\n\nmodule.exports = RE_EXTNAME_POSIX;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to capture a POSIX filename extension.\n*\n* @module @stdlib/regexp/extname-posix\n*\n* @example\n* var reExtnamePosix = require( '@stdlib/regexp/extname-posix' );\n*\n* var RE_EXTNAME_POSIX = reExtnamePosix();\n* var ext = RE_EXTNAME_POSIX.exec( 'index.js' )[ 1 ];\n* // returns '.js'\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture a Windows filename extension.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_EXTNAME_WINDOWS = reExtnameWindows();\n* var ext = RE_EXTNAME_WINDOWS.exec( 'index.js' )[ 1 ];\n* // returns '.js'\n*/\nfunction reExtnameWindows() {\n\treturn /^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+|)(?:[\\\\\\/]|)(?:[\\s\\S]*?)(?:(?:\\.{1,2}|[^\\\\\\/]+?|)(\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/; // eslint-disable-line no-useless-escape\n}\n\n\n// EXPORTS //\n\nmodule.exports = reExtnameWindows;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reExtnameWindows = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Captures a Windows filename extension. Modified from Node.js [source][1].\n*\n* -   `^`\n*     -   match any string which begins with\n*\n* -   `(?:)`\n*     -   capture but do not remember (device)\n*\n* -   `[a-zA-Z]:`\n*     -   match any upper or lowercase letter and a `:` literal\n*\n* -   `|`\n*     -   OR\n*\n* -   `[\\\\\\/]`\n*     -   match a `\\` or `/` literal character\n*\n* -   `{2}`\n*     -   exactly two times\n*\n* -   `[^\\\\\\/]+`\n*     -   match anything but a `\\` or `/` literal one or more times\n*\n* -   `[\\\\\\/]+`\n*     -   match a `\\` or `/` literal one or more times\n*\n* -   `[^\\\\\\/]+`\n*     -   match anything but a `\\` or `/` literal one or more times\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (slash)\n*\n* -   `[\\\\\\/]`\n*     -   match a `\\` or `/` literal\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (dirname)\n*\n* -   `[\\s\\S]`\n*     -   match any space or non-space character\n*\n* -   `*?`\n*     -   zero or more times but do so non-greedily\n*\n* -   `(?:)`\n*     -   capture but do not remember (basename)\n*\n* -   `(?:)`\n*     -   capture but do not remember\n*\n* -   `\\.{1,2}`\n*     -   match a `.` literal one or two times\n*\n* -   `|`\n*     -   OR\n*\n* -   `[^\\\\\\/]+?`\n*     -   match anything but a `\\` or `/` literal one or more times, but do so non-greedily\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `()`\n*     -   capture (extname)\n*\n* -   `\\.`\n*     -   match a `.` literal\n*\n* -   `[^.\\/\\\\]*`\n*     -   match anything but a `.`, `/`, or `\\` literal zero or more times\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (trailing slash)\n*\n* -   `[\\\\\\/]*`\n*     -   match a `\\` or `/` literal zero or more times\n*\n* -   `$`\n*     -   end of string\n*\n* [1]: https://github.com/nodejs/node/blob/1a3b295d0f46b2189bd853800b1e63ab4d106b66/lib/path.js#L65\n*\n* @constant\n* @type {RegExp}\n* @default /^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+|)(?:[\\\\\\/]|)(?:[\\s\\S]*?)(?:(?:\\.{1,2}|[^\\\\\\/]+?|)(\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/\n*/\nvar RE_EXTNAME_WINDOWS = reExtnameWindows();\n\n\n// EXPORTS //\n\nmodule.exports = RE_EXTNAME_WINDOWS;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to capture a Windows filename extension.\n*\n* @module @stdlib/regexp/extname-windows\n*\n* @example\n* var reExtnameWindows = require( '@stdlib/regexp/extname-windows' );\n*\n* var RE_EXTNAME_WINDOWS = reExtnameWindows();\n* var ext = RE_EXTNAME_WINDOWS.exec( 'index.js' )[ 1 ];\n* // returns '.js'\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar contains = require( '@stdlib/assert/contains' );\nvar format = require( '@stdlib/string/format' );\nvar posix = require( './../../extname-posix' );\nvar win32 = require( './../../extname-windows' );\nvar IS_WINDOWS = require( '@stdlib/assert/is-windows' );\n\n\n// VARIABLES //\n\nvar PLATFORMS = [ 'posix', 'win32' ];\n\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture a filename extension.\n*\n* @param {string} [platform] - path platform (`win32` or `posix`)\n* @throws {Error} platform must be `win32` or `posix`\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE = reExtname();\n* var base = RE.exec( '/foo/bar/index.js' )[ 1 ];\n* // returns '.js'\n*/\nfunction reExtname( platform ) {\n\tif ( arguments.length > 0 ) {\n\t\tif ( !contains( PLATFORMS, platform ) ) {\n\t\t\tthrow new Error( format( 'invalid argument. Must be one of the following: \"%s\". Value: `%s`.', PLATFORMS.join( '\", \"' ), platform ) );\n\t\t}\n\t}\n\tif ( platform === 'win32' || IS_WINDOWS ) {\n\t\treturn win32();\n\t}\n\t// Case: platform === 'posix'\n\treturn posix();\n}\n\n\n// EXPORTS //\n\nmodule.exports = reExtname;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to capture a filename extension.\n*\n* @module @stdlib/regexp/extname\n*\n* @example\n* var reExtname = require( '@stdlib/regexp/extname' );\n* var RE_EXTNAME = reExtname();\n*\n* // On a POSIX platform...\n* var ext = RE_EXTNAME.exec( '/foo/bar/index.js' )[ 1 ];\n* // returns '.js'\n*\n* @example\n* var reExtname = require( '@stdlib/regexp/extname' );\n* var RE_EXTNAME = reExtname();\n*\n* // On a Windows platform...\n* var ext = RE_EXTNAME.exec( 'C:\\\\foo\\\\bar\\\\index.js' )[ 1 ];\n* // returns '.js'\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar posix = require( './../../extname-posix' ).REGEXP;\nvar win32 = require( './../../extname-windows' ).REGEXP;\nvar IS_WINDOWS = require( '@stdlib/assert/is-windows' );\nvar main = require( './main.js' );\n\n\n// VARIABLES //\n\nvar REGEXP = ( IS_WINDOWS ) ? win32 : posix;\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\nsetReadOnly( main, 'REGEXP_POSIX', posix );\nsetReadOnly( main, 'REGEXP_WIN32', win32 );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to split a POSIX filename.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_FILENAME_POSIX = reFilenamePosix();\n* var parts = RE_FILENAME_POSIX.exec( '/foo/bar/index.js' ).slice();\n* // returns [ '/foo/bar/index.js', '/', 'foo/bar/', 'index.js', '.js' ]\n*/\nfunction reFilenamePosix() {\n\treturn /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/; // eslint-disable-line no-useless-escape\n}\n\n\n// EXPORTS //\n\nmodule.exports = reFilenamePosix;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reFilenamePosix = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Splits a POSIX filename. Extracted from Node.js [source][1].\n*\n* Regular expression: `/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/`\n*\n* -   `\\^`\n*     -   match any string which begins with\n*\n* -   `()`\n*     -   capture (root)\n*\n* -   `\\/?`\n*     -   match a `/` literal zero or one time\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `()`\n*     -   capture (directory)\n*\n* -   `[\\s\\S]`\n*     -   any space or non-space character\n*\n* -   `*?`\n*     -   zero or more times, but non-greedily (shortest possible match)\n*\n* -   `()`\n*     -   capture (basename)\n*\n* -   `\\.{1,2}`\n*     -   match a `.` literal one or two times\n*\n* -   `|`\n*     -   OR\n*\n* -   `[^\\/]+?`\n*     -   match anything which is not a `/` literal one or more times, but do so non-greedily\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `()`\n*     -   capture\n*\n* -   `\\.`\n*     -   match a `.` literal\n*\n* -   `[^.\\/]`\n*     -   match anything which is not a `.` or `/` literal\n*\n* -   `*`\n*     -   zero or more times\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (trailing slash)\n*\n* -   `[\\/]`\n*     -   match a `/` literal\n*\n* -   `*`\n*     -   zero or more times\n*\n* -   `$`\n*     -   end of string\n*\n* [1]: https://github.com/nodejs/node/blob/1a3b295d0f46b2189bd853800b1e63ab4d106b66/lib/path.js#L406\n*\n* @constant\n* @type {RegExp}\n* @default /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/\n*/\nvar RE_FILENAME_POSIX = reFilenamePosix();\n\n\n// EXPORTS //\n\nmodule.exports = RE_FILENAME_POSIX;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to split a POSIX filename.\n*\n* @module @stdlib/regexp/filename-posix\n*\n* @example\n* var reFilenamePosix = require( '@stdlib/regexp/filename-posix' );\n*\n* var RE_FILENAME_POSIX = reFilenamePosix();\n* var parts = RE_FILENAME_POSIX.exec( '/foo/bar/index.js' ).slice();\n* // returns [ '/foo/bar/index.js', '/', 'foo/bar/', 'index.js', '.js' ]\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to split a Windows filename.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_FILENAME_WINDOWS = reFilenameWindows();\n* var parts = RE_FILENAME_WINDOWS.exec( 'C:\\\\foo\\\\bar\\\\index.js' ).slice();\n* // returns [ 'C:\\\\foo\\\\bar\\\\index.js', 'C:', '\\\\', 'foo\\\\bar\\\\', 'index.js', '.js' ]\n*/\nfunction reFilenameWindows() {\n\treturn /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+|)([\\\\\\/]|)([\\s\\S]*?)((?:\\.{1,2}|[^\\\\\\/]+?|)(\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/; // eslint-disable-line no-useless-escape\n}\n\n\n// EXPORTS //\n\nmodule.exports = reFilenameWindows;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reFilenameWindows = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Splits a Windows filename. Modified from Node.js [source][1].\n*\n* Regular expression: `/^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+|)([\\\\\\/]|)([\\s\\S]*?)((?:\\.{1,2}|[^\\\\\\/]+?|)(\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/`\n*\n* -   `^`\n*     -   match any string which begins with\n*\n* -   `()`\n*     -   capture (device)\n*\n* -   `[a-zA-Z]:`\n*     -   match any upper or lowercase letter and a `:` literal\n*\n* -   `|`\n*     -   OR\n*\n* -   `[\\\\\\/]`\n*     -   match a `\\` or `/` literal character\n*\n* -   `{2}`\n*     -   exactly two times\n*\n* -   `[^\\\\\\/]+`\n*     -   match anything but a `\\` or `/` literal one or more times\n*\n* -   `[\\\\\\/]+`\n*     -   match a `\\` or `/` literal one or more times\n*\n* -   `[^\\\\\\/]+`\n*     -   match anything but a `\\` or `/` literal one or more times\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `()`\n*     -   capture (slash)\n*\n* -   `[\\\\\\/]`\n*     -   match a `\\` or `/` literal\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `()`\n*     -   capture (dirname)\n*\n* -   `[\\s\\S]`\n*     -   match any space or non-space character\n*\n* -   `*?`\n*     -   zero or more times but do so non-greedily\n*\n* -   `()`\n*     -   capture (basename)\n*\n* -   `(?:)`\n*     -   capture but do not remember\n*\n* -   `\\.{1,2}`\n*     -   match a `.` literal one or two times\n*\n* -   `|`\n*     -   OR\n*\n* -   `[^\\\\\\/]+?`\n*     -   match anything but a `\\` or `/` literal one or more times, but do so non-greedily\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `()`\n*     -   capture (extname)\n*\n* -   `\\.`\n*     -   match a `.` literal\n*\n* -   `[^.\\/\\\\]*`\n*     -   match anything but a `.`, `/`, or `\\` literal zero or more times\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (trailing slash)\n*\n* -   `[\\\\\\/]*`\n*     -   match a `\\` or `/` literal zero or more times\n*\n* -   `$`\n*     -   end of string\n*\n* [1]: https://github.com/nodejs/node/blob/1a3b295d0f46b2189bd853800b1e63ab4d106b66/lib/path.js#L65\n*\n* @constant\n* @type {RegExp}\n* @default /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+|)([\\\\\\/]|)([\\s\\S]*?)((?:\\.{1,2}|[^\\\\\\/]+?|)(\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/\n*/\nvar RE_FILENAME_WINDOWS = reFilenameWindows();\n\n\n// EXPORTS //\n\nmodule.exports = RE_FILENAME_WINDOWS;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to split a Windows filename.\n*\n* @module @stdlib/regexp/filename-windows\n*\n* @example\n* var reFilenameWindows = require( '@stdlib/regexp/filename-windows' );\n*\n* var RE_FILENAME_WINDOWS = reFilenameWindows();\n* var parts = RE_FILENAME_WINDOWS.exec( 'C:\\\\foo\\\\bar\\\\index.js' ).slice();\n* // returns [ 'C:\\\\foo\\\\bar\\\\index.js', 'C:', '\\\\', 'foo\\\\bar\\\\', 'index.js', '.js' ]\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar contains = require( '@stdlib/assert/contains' );\nvar format = require( '@stdlib/string/format' );\nvar posix = require( './../../filename-posix' );\nvar win32 = require( './../../filename-windows' );\nvar IS_WINDOWS = require( '@stdlib/assert/is-windows' );\n\n\n// VARIABLES //\n\nvar PLATFORMS = [ 'posix', 'win32' ];\n\n\n// MAIN //\n\n/**\n* Returns a regular expression to split a filename.\n*\n* @param {string} [platform] - path platform (`win32` or `posix`)\n* @throws {Error} platform must be `win32` or `posix`\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_FILENAME = reFilename( 'posix' );\n* var parts = RE_FILENAME.exec( '/foo/bar/index.js' ).slice();\n* // returns [ '/foo/bar/index.js', '/', 'foo/bar/', 'index.js', '.js' ]\n*/\nfunction reFilename( platform ) {\n\tif ( arguments.length > 0 ) {\n\t\tif ( !contains( PLATFORMS, platform ) ) {\n\t\t\tthrow new Error( format( 'invalid argument. Must be one of the following: \"%s\". Value: `%s`.', PLATFORMS.join( '\", \"' ), platform ) );\n\t\t}\n\t}\n\tif ( platform === 'win32' || IS_WINDOWS ) {\n\t\treturn win32();\n\t}\n\t// Case: platform === 'posix'\n\treturn posix();\n}\n\n\n// EXPORTS //\n\nmodule.exports = reFilename;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to split a filename.\n*\n* @module @stdlib/regexp/filename\n*\n* @example\n* var reFilename = require( '@stdlib/regexp/filename' );\n* var RE_FILENAME = reFilename();\n*\n* // On a POSIX platform...\n* var parts = RE_FILENAME.exec( '/foo/bar/index.js' ).slice();\n* // returns [ '/foo/bar/index.js', '/', 'foo/bar/', 'index.js', '.js' ]\n*\n* @example\n* var reFilename = require( '@stdlib/regexp/filename' );\n* var RE_FILENAME = reFilename();\n*\n* // On a Windows platform...\n* var parts = RE_FILENAME.exec( 'C:\\\\foo\\\\bar\\\\index.js' ).slice();\n* // returns [ 'C:\\\\foo\\\\bar\\\\index.js', 'C:', '\\\\', 'foo\\\\bar\\\\', 'index.js', '.js' ]\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar posix = require( './../../filename-posix' ).REGEXP;\nvar win32 = require( './../../filename-windows' ).REGEXP;\nvar IS_WINDOWS = require( '@stdlib/assert/is-windows' );\nvar main = require( './main.js' );\n\n\n// VARIABLES //\n\nvar REGEXP = ( IS_WINDOWS ) ? win32 : posix;\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\nsetReadOnly( main, 'REGEXP_POSIX', posix );\nsetReadOnly( main, 'REGEXP_WIN32', win32 );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_FUNCTION_NAME = reFunctionName();\n*\n* function fname( fcn ) {\n*     return RE_FUNCTION_NAME.exec( fcn.toString() )[ 1 ];\n* }\n*\n* var fn = fname( Math.sqrt );\n* // returns 'sqrt'\n*\n* fn = fname( Int8Array );\n* // returns 'Int8Array'\n*\n* fn = fname( Object.prototype.toString );\n* // returns 'toString'\n*\n* fn = fname( function(){} );\n* // returns ''\n*/\nfunction reFunctionName() {\n\treturn /^\\s*function\\s*([^(]*)/i;\n}\n\n\n// EXPORTS //\n\nmodule.exports = reFunctionName;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reFunctionName = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Captures everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* Regular expression: `/^\\s*function\\s*([^(]*)/i`\n*\n* -   `/^\\s*`\n*     -   Match zero or more spaces at beginning\n*\n* -   `function`\n*     -   Match the word `function`\n*\n* -   `\\s*`\n*     -   Match zero or more spaces after the word `function`\n*\n* -   `()`\n*     -   Capture\n*\n* -   `[^(]*`\n*     -   Match anything except a left parenthesis `(` zero or more times\n*\n* -   `/i`\n*     -   ignore case\n*\n* @constant\n* @type {RegExp}\n* @default /^\\s*function\\s*([^(]*)/i\n*/\nvar RE_FUNCTION_NAME = reFunctionName();\n\n\n// EXPORTS //\n\nmodule.exports = RE_FUNCTION_NAME;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* @module @stdlib/regexp/function-name\n*\n* @example\n* var reFunctionName = require( '@stdlib/regexp/function-name' );\n* var RE_FUNCTION_NAME = reFunctionName();\n*\n* function fname( fcn ) {\n*     return RE_FUNCTION_NAME.exec( fcn.toString() )[ 1 ];\n* }\n*\n* var fn = fname( Math.sqrt );\n* // returns 'sqrt'\n*\n* fn = fname( Int8Array );\n* // returns 'Int8Array'\n*\n* fn = fname( Object.prototype.toString );\n* // returns 'toString'\n*\n* fn = fname( function(){} );\n* // returns ''\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Fcn = require( '@stdlib/function/ctor' );\nvar function2string = require( '@stdlib/function/to-string' );\n\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_NATIVE_FUNCTION = reNativeFunction();\n* var bool = RE_NATIVE_FUNCTION.test( Date.toString() );\n* // returns true\n*/\nfunction reNativeFunction() {\n\tvar str = '';\n\n\t// Use a native function as a template:\n\tstr += function2string( Fcn );\n\n\t// Escape special RegExp characters:\n\tstr = str.replace( /([.*+?^=!:$(){}|[\\]\\/\\\\])/g, '\\\\$1' ); // eslint-disable-line no-useless-escape\n\n\t// Replace any mentions of `Function` to make template generic and replace `for ...` and additional info provided in other environments, such as Rhino.\n\tstr = str.replace( /Function|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?' );\n\n\t// Bracket the regular expression:\n\tstr = '^' + str + '$';\n\n\t// Create the regular expression:\n\treturn new RegExp( str );\n}\n\n\n// EXPORTS //\n\nmodule.exports = reNativeFunction;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reNativeFunction = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Match a native function.\n*\n* @constant\n* @type {RegExp}\n*/\nvar RE_NATIVE_FUNCTION = reNativeFunction();\n\n\n// EXPORTS //\n\nmodule.exports = RE_NATIVE_FUNCTION;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to match a native function.\n*\n* @module @stdlib/regexp/native-function\n*\n* @example\n* var reNativeFunction = require( '@stdlib/regexp/native-function' );\n*\n* var RE_NATIVE_FUNCTION = reNativeFunction();\n* function isNativeFunction( fcn ) {\n*     return RE_NATIVE_FUNCTION.test( fcn.toString() );\n* }\n*\n* var bool = isNativeFunction( Math.sqrt );\n* // returns true\n*\n* bool = isNativeFunction( Int8Array );\n* // returns true\n*\n* bool = isNativeFunction( Object.prototype.toString );\n* // returns true\n*\n* bool = isNativeFunction( function noop() {} );\n* // returns false\n*/\n\n\n// MAIN //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to parse a regular expression string.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_REGEXP = reRegExp();\n*\n* var bool = RE_REGEXP.test( '/^beep$/' );\n* // returns true\n*\n* bool = RE_REGEXP.test( '' );\n* // returns false\n*/\nfunction reRegExp() {\n\treturn /^\\/((?:\\\\\\/|[^\\/])+)\\/([imgy]*)$/; // eslint-disable-line no-useless-escape\n}\n\n\n// EXPORTS //\n\nmodule.exports = reRegExp;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reRegExp = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Matches parts of a regular expression string.\n*\n* Regular expression: `/^\\/((?:\\\\\\/|[^\\/])+)\\/([imgy]*)$/`\n*\n* -   `/^\\/`\n*     -   match a string that begins with a `/`\n*\n* -   `()`\n*     -   capture\n*\n* -   `(?:)+`\n*     -   capture, but do not remember, a group of characters which occur one or more times\n*\n* -   `\\\\\\/`\n*     -   match the literal `\\/`\n*\n* -   `|`\n*     -   OR\n*\n* -   `[^\\/]`\n*     -   anything which is not the literal `\\/`\n*\n* -   `\\/`\n*     -   match the literal `/`\n*\n* -   `([imgy]*)`\n*     -   capture any characters matching `imgy` occurring zero or more times\n*\n* -   `$/`\n*     -   string end\n*\n* @constant\n* @type {RegExp}\n* @default /^\\/((?:\\\\\\/|[^\\/])+)\\/([imgy]*)$/\n*/\nvar RE_REGEXP = reRegExp();\n\n\n// EXPORTS //\n\nmodule.exports = RE_REGEXP;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to parse a regular expression string.\n*\n* @module @stdlib/regexp/regexp\n*\n* @example\n* var reRegExp = require( '@stdlib/regexp/regexp' );\n*\n* var RE_REGEXP = reRegExp();\n*\n* var bool = RE_REGEXP.test( '/^beep$/' );\n* // returns true\n*\n* bool = RE_REGEXP.test( '' );\n* // returns false\n*\n* @example\n* var reRegExp = require( '@stdlib/regexp/regexp' );\n*\n* var RE_REGEXP = reRegExp();\n*\n* var parts = RE_REGEXP.exec( '/^.*$/ig' );\n* // returns [ '/^.*$/ig', '^.*$', 'ig', 'index': 0, 'input': '/^.*$/ig' ]\n*/\n\n// MAIN //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Revives a JSON-serialized regular expression.\n*\n* @param {string} key - key\n* @param {*} value - value\n* @returns {(*|RegExp)} regular expression\n*\n* @example\n* var parseJSON = require( '@stdlib/utils/parse-json' );\n*\n* var str = '{\"type\":\"RegExp\",\"pattern\":\"ab+c\",\"flags\":\"\"}';\n*\n* var re = parseJSON( str, reviver );\n* // returns <RegExp>\n*/\nfunction reviver( key, value ) {\n\tif ( value && value.type === 'RegExp' && value.pattern ) {\n\t\treturn new RegExp( value.pattern, value.flags );\n\t}\n\treturn value;\n}\n\n\n// EXPORTS //\n\nmodule.exports = reviver;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Revive a JSON-serialized regular expression.\n*\n* @module @stdlib/regexp/reviver\n*\n* @example\n* var parseJSON = require( '@stdlib/utils/parse-json' );\n* var reviver = require( '@stdlib/regexp/reviver' );\n*\n* var str = '{\"type\":\"RegExp\",\"pattern\":\"ab+c\",\"flags\":\"\"}';\n*\n* var re = parseJSON( str, reviver );\n* // returns <RegExp>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to match a semantic version string.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_SEMVER = reSemVer();\n* // returns <RegExp>\n*\n* var bool = RE_SEMVER.test( '1.0.0' );\n* // returns true\n*\n* bool = RE_SEMVER.test( '1.0.0-alpha.1' );\n* // returns true\n*\n* bool = RE_SEMVER.test( 'abc' );\n* // returns false\n*\n* bool = RE_SEMVER.test( '1.0.0-alpha.1+build.1' );\n* // returns true\n*/\nfunction reSemVer() {\n\treturn /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n}\n\n\n// EXPORTS //\n\nmodule.exports = reSemVer;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reSemVer = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Matches a semantic version string.\n*\n* Regular Expression: `/^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/`\n*\n* -   `^`\n*     -   start of input\n*\n* -   `(0|[1-9]\\d*)`\n*     -   `0` or a non-zero digit followed by zero or more digits (major version)\n*\n* -   `\\.`\n*     -   match literal period\n*\n* -   `(0|[1-9]\\d*)`\n*     -   `0` or a non-zero digit followed by zero or more digits (minor version)\n*\n* -   `\\.`\n*     -   match literal period\n*\n* -   `(0|[1-9]\\d*)`\n*     -   `0` or a non-zero digit followed by zero or more digits (patch version)\n*\n* -   `(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?`\n*     -   optional pre-release version\n*\n* -   `(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?`\n*     -   optional build metadata\n*\n* -   `$`\n*     -   end of input\n*\n* @constant\n* @type {RegExp}\n* @default /^(?:0|[1-9]\\d*)\\.(?:0|[1-9]\\d*)\\.(?:0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/\n* @see [semver-regexp]{@link https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string}\n*/\nvar RE_SEMVER = reSemVer();\n\n\n// EXPORTS //\n\nmodule.exports = RE_SEMVER;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to match a semantic version string.\n*\n* @module @stdlib/regexp/semver\n*\n* @example\n* var reSemVer = require( '@stdlib/regexp/semver' );\n*\n* var RE_SEMVER = reSemVer();\n* // returns <RegExp>\n*\n* var bool = RE_SEMVER.test( '1.2.3' );\n* // returns true\n*\n* bool = RE_SEMVER.test( '1.2.3-alpha' );\n* // returns true\n*\n* bool = RE_SEMVER.test( '-1.2.3' );\n* // returns false\n*\n* @example\n* var reSemVer = require( '@stdlib/regexp/semver' );\n*\n* var bool = reSemVer.REGEXP.test( '1.2.3' );\n* // returns true\n*/\n\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isRegExp = require( '@stdlib/assert/is-regexp' );\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar SLASH = '/'.charCodeAt( 0 );\n\n\n// MAIN //\n\n/**\n* Returns a JSON representation of a regular expression.\n*\n* @param {RegExp} re - regular expression to serialize\n* @throws {TypeError} must provide a regular expression\n* @returns {Object} JSON representation\n*\n* @example\n* var json = regexp2json( /ab+c/ );\n* // returns {...}\n*/\nfunction regexp2json( re ) {\n\tvar i;\n\tif ( !isRegExp( re ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a regular expression. Value: `%s`.', re ) );\n\t}\n\tre = re.toString();\n\tfor ( i = re.length-1; i >= 0; i-- ) {\n\t\tif ( re.charCodeAt( i ) === SLASH ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn {\n\t\t'type': 'RegExp',\n\t\t'pattern': re.substring( 1, i ),\n\t\t'flags': re.substring( i+1 )\n\t};\n}\n\n\n// EXPORTS //\n\nmodule.exports = regexp2json;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a JSON representation of a regular expression.\n*\n* @module @stdlib/regexp/to-json\n*\n* @example\n* var regexp2json = require( '@stdlib/regexp/to-json' );\n*\n* var json = regexp2json( /ab+c/ );\n* // returns <Object>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to parse a UNC path.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_UNC_PATH = reUncPath();\n* var bool = RE_UNC_PATH.test( '\\\\\\\\server\\\\share' );\n* // returns true\n*\n* bool = RE_UNC_PATH.test( 'C:\\\\foo\\\\bar\\\\baz' );\n* // returns false\n*/\nfunction reUncPath() {\n\treturn /^\\\\\\\\([^\\\\:\\|\\[\\]\\/\";<>+=,?* _]+)\\\\([\\u0020-\\u0021\\u0023-\\u0029\\u002D-\\u002E\\u0030-\\u0039\\u0040-\\u005A\\u005E-\\u007B\\u007E-\\u00FF]{1,80})(((?:\\\\[\\u0020-\\u0021\\u0023-\\u0029\\u002D-\\u002E\\u0030-\\u0039\\u0040-\\u005A\\u005E-\\u007B\\u007E-\\u00FF]{1,255})+?|)(?:\\\\((?:[\\u0020-\\u0021\\u0023-\\u0029\\u002B-\\u002E\\u0030-\\u0039\\u003B\\u003D\\u0040-\\u005B\\u005D-\\u007B]{1,255}){1}(?:\\:(?=[\\u0001-\\u002E\\u0030-\\u0039\\u003B-\\u005B\\u005D-\\u00FF]|\\:)(?:([\\u0001-\\u002E\\u0030-\\u0039\\u003B-\\u005B\\u005D-\\u00FF]+(?!\\:)|[\\u0001-\\u002E\\u0030-\\u0039\\u003B-\\u005B\\u005D-\\u00FF]*)(?:\\:([\\u0001-\\u002E\\u0030-\\u0039\\u003B-\\u005B\\u005D-\\u00FF]+)|))|)))|)$/; // eslint-disable-line no-useless-escape, no-control-regex\n}\n\n\n// EXPORTS //\n\nmodule.exports = reUncPath;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reUncPath = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Matches parts of a UNC path.\n*\n* Regular Expression: `/^\\\\\\\\([^\\\\:\\|\\[\\]\\/\";<>+=,?* _]+)\\\\([\\u0020-\\u0021\\u0023-\\u0029\\u002D-\\u002E\\u0030-\\u0039\\u0040-\\u005A\\u005E-\\u007B\\u007E-\\u00FF]{1,80})(((?:\\\\[\\u0020-\\u0021\\u0023-\\u0029\\u002D-\\u002E\\u0030-\\u0039\\u0040-\\u005A\\u005E-\\u007B\\u007E-\\u00FF]{1,255})+?|)(?:\\\\((?:[\\u0020-\\u0021\\u0023-\\u0029\\u002B-\\u002E\\u0030-\\u0039\\u003B\\u003D\\u0040-\\u005B\\u005D-\\u007B]{1,255}){1}(?:\\:(?=[\\u0001-\\u002E\\u0030-\\u0039\\u003B-\\u005B\\u005D-\\u00FF]|\\:)(?:([\\u0001-\\u002E\\u0030-\\u0039\\u003B-\\u005B\\u005D-\\u00FF]+(?!\\:)|[\\u0001-\\u002E\\u0030-\\u0039\\u003B-\\u005B\\u005D-\\u00FF]*)(?:\\:([\\u0001-\\u002E\\u0030-\\u0039\\u003B-\\u005B\\u005D-\\u00FF]+)|))|)))|)$/`\n*\n* -   `/^\\\\\\\\`\n*     -   match a string that begins with two backward slashes `\\\\\\\\`\n*\n* -   `()`\n*     -   capture (1) (host name)\n*\n* -   `[^\\\\:\\|\\[\\]\\/\";<>+=,?* _]+`\n*     -   match any sequence of characters, excluding `\\\\:\\|\\[\\]\\/\";<>+=,?* _`, one or more times\n*\n* -   `\\\\`\n*     -   match a literal backward slash `\\\\`\n*\n* -   `()`\n*     -   capture (2) (share name)\n*\n* -   `[\\u0020-\\u0021\\u0023-\\u0029\\u002D-\\u002E\\u0030-\\u0039\\u0040-\\u005A\\u005E-\\u007B\\u007E-\\u00FF]{1,80}`\n*     -   match any sequence of 1 to 80 characters matching `` !#$%'()\\-\\.0-9@A-Z^_`a-z{}~`` and Latin-1 Unicode supplement\n*\n* -   `(`\n*     -   begin capture (3) (object name)\n*\n* -   `(`\n*     -   begin capture (4) (path name)\n*\n* -   `(?:\\\\[\\u0020-\\u0021\\u0023-\\u0029\\u002D-\\u002E\\u0030-\\u0039\\u0040-\\u005A\\u005E-\\u007B\\u007E-\\u00FF]{1,255})+?`\n*     -   capture but do not remember a `\\\\` literal followed by one or more sequences of 1 to 255 characters matching `` !#$%'()\\-\\.0-9@A-Z^_`a-z{}~`` and Latin-1 Unicode supplement and do so non-greedily (5)\n*\n* -   `|)`\n*     -   OR capture nothing (4) (path name)\n*\n* -   `(?:`\n*     -   begin capture but do not remember (6)\n*\n* -   `\\\\`\n*     -   match a `\\\\` literal\n*\n* -   `(`\n*     -   begin capture (7) (file name)\n*\n* -   `(?:[0-9a-z]{1,255}){1}`\n*     -   capture but do not remember a sequence of 1 to 255 characters matching `` !#$%'()\\+,\\-\\.0-9;=@A-Z\\[\\]^_`a-z{`` (8)\n*\n* -   `(?:`\n*     -   begin capture but do not remember (9)\n*\n* -   `\\:(?=[\\u0001-\\u002E\\u0030-\\u0039\\u003B-\\u005B\\u005D-\\u00FF]|\\:)`\n*     -   match a literal `:` only if followed by `\\u0001-\\u002E\\u0030-\\u0039\\u003B-\\u005B\\u005D-\\u00FF` OR a literal `:`\n*\n* -   `(?:`\n*     -   begin capture but do not remember (10)\n*\n* -   `([\\u0001-\\u002E\\u0030-\\u0039\\u003B-\\u005B\\u005D-\\u00FF]+(?!\\:)|[\\u0001-\\u002E\\u0030-\\u0039\\u003B-\\u005B\\u005D-\\u00FF]*)`\n*     -   capture a sequence of one or more characters not followed by a literal `:`; otherwise, capture a sequence of 0 or more characters (11) (stream name)\n*\n* -   `(?:`\n*     -   begin capture but do not remember (12)\n*\n* -   `\\:`\n*     -   match a literal `:`\n*\n* -   `([\\u0001-\\u002E\\u0030-\\u0039\\u003B-\\u005B\\u005D-\\u00FF]+)`\n*     -   capture a sequence of one or more characters (13) (stream type)\n*\n* -   `|)`\n*     -   OR capture nothing (12)\n*\n* -   `)`\n*     -   end capture (10)\n*\n* -   `|)`\n*     -   OR capture nothing (9)\n*\n* -   `)`\n*     -   end capture (7) (file name)\n*\n* -   `)`\n*     -   end capture (6)\n*\n* -   `|)`\n*     -   OR capture nothing (3) (object name)\n*\n* -   `$/`\n*     -   end of string\n*\n* @constant\n* @type {RegExp}\n* @default /^\\\\\\\\([^\\\\:\\|\\[\\]\\/\";<>+=,?* _]+)\\\\([\\u0020-\\u0021\\u0023-\\u0029\\u002D-\\u002E\\u0030-\\u0039\\u0040-\\u005A\\u005E-\\u007B\\u007E-\\u00FF]{1,80})(((?:\\\\[\\u0020-\\u0021\\u0023-\\u0029\\u002D-\\u002E\\u0030-\\u0039\\u0040-\\u005A\\u005E-\\u007B\\u007E-\\u00FF]{1,255})+?|)(?:\\\\((?:[\\u0020-\\u0021\\u0023-\\u0029\\u002B-\\u002E\\u0030-\\u0039\\u003B\\u003D\\u0040-\\u005B\\u005D-\\u007B]{1,255}){1}(?:\\:(?=[\\u0001-\\u002E\\u0030-\\u0039\\u003B-\\u005B\\u005D-\\u00FF]|\\:)(?:([\\u0001-\\u002E\\u0030-\\u0039\\u003B-\\u005B\\u005D-\\u00FF]+(?!\\:)|[\\u0001-\\u002E\\u0030-\\u0039\\u003B-\\u005B\\u005D-\\u00FF]*)(?:\\:([\\u0001-\\u002E\\u0030-\\u0039\\u003B-\\u005B\\u005D-\\u00FF]+)|))|)))|)$/\n* @see [MSDN]{@link https://msdn.microsoft.com/en-us/library/gg465305.aspx}\n*/\nvar RE_UNC_PATH = reUncPath();\n\n\n// EXPORTS //\n\nmodule.exports = RE_UNC_PATH;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to parse a UNC path.\n*\n* @module @stdlib/regexp/unc-path\n*\n* @example\n* var reUncPath = require( '@stdlib/regexp/unc-path' );\n*\n* var RE_UNC_PATH = reUncPath();\n* var bool = RE_UNC_PATH.test( '\\\\\\\\server\\\\share' );\n* // returns true\n*\n* bool = RE_UNC_PATH.test( 'C:\\\\foo\\\\bar\\\\baz' );\n* // returns false\n*\n* @example\n* var reUncPath = require( '@stdlib/regexp/unc-path' );\n*\n* var parts = reUncPath.REGEXP.exec( '\\\\\\\\server\\\\share\\\\foo\\\\bar\\\\baz' )[ 1 ];\n* // returns 'server'\n*/\n\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to match a UTF-16 surrogate pair.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_UTF16_SURROGATE_PAIR = reUtf16SurrogatePair();\n*\n* var bool = RE_UTF16_SURROGATE_PAIR.test( '\\uD800\\uDC00' );\n* // returns true\n*\n* bool = RE_UTF16_SURROGATE_PAIR.test( 'abc\\uD800\\uDC00def' );\n* // returns true\n*\n* bool = RE_UTF16_SURROGATE_PAIR.test( 'abc' );\n* // returns false\n*/\nfunction reUtf16SurrogatePair() {\n\treturn /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/;\n}\n\n\n// EXPORTS //\n\nmodule.exports = reUtf16SurrogatePair;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reUtf16SurrogatePair = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Matches a UTF-16 surrogate pair.\n*\n* Regular expression: `/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/`\n*\n* -   `[\\uD800-\\uDBFF]`\n*     -   match a high surrogate\n*\n* -   `[\\uDC00-\\uDFFF]`\n*     -   match a low surrogate\n*\n* @constant\n* @type {RegExp}\n* @default /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/\n*/\nvar RE_UTF16_SURROGATE_PAIR = reUtf16SurrogatePair();\n\n\n// EXPORTS //\n\nmodule.exports = RE_UTF16_SURROGATE_PAIR;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to match a UTF-16 surrogate pair.\n*\n* @module @stdlib/regexp/utf16-surrogate-pair\n*\n* @example\n* var reUtf16SurrogatePair = require( '@stdlib/regexp/utf16-surrogate-pair' );\n*\n* var RE_UTF16_SURROGATE_PAIR = reUtf16SurrogatePair();\n*\n* var bool = RE_UTF16_SURROGATE_PAIR.test( '\\uD800\\uDC00' );\n* // returns true\n*\n* bool = RE_UTF16_SURROGATE_PAIR.test( 'abc\\uD800\\uDC00def' );\n* // returns true\n*\n* bool = RE_UTF16_SURROGATE_PAIR.test( 'abc' );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to match a UTF-16 unpaired surrogate.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_UTF16_UNPAIRED_SURROGATE = reUtf16UnpairedSurrogate();\n*\n* var bool = RE_UTF16_UNPAIRED_SURROGATE.test( '\\uD800' );\n* // returns true\n*\n* bool = RE_UTF16_UNPAIRED_SURROGATE.test( '\\uDC00' );\n* // returns true\n*\n* bool = RE_UTF16_UNPAIRED_SURROGATE.test( 'abc' );\n* // returns false\n*/\nfunction reUtf16UnpairedSurrogate() {\n\treturn /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/;\n}\n\n\n// EXPORTS //\n\nmodule.exports = reUtf16UnpairedSurrogate;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reUtf16UnpairedSurrogate = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Matches an unpaired UTF-16 surrogate.\n*\n* Regular expression: `/(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/`\n*\n* -   `(?:[^\\uD800-\\uDBFF]|^)`\n*     -   capture but do not remember anything which is not a high surrogate, including nothing\n*\n* -   `[\\uDC00-\\uDFFF]`\n*     -   match a low surrogate\n*\n* -   `|`\n*     -   OR\n*\n* -   `[\\uD800-\\uDBFF]`\n*     -   match a high surrogate\n*\n* -   `(?![\\uDC00-\\uDFFF])`\n*     -   but only accept the previous match if not followed by a low surrogate\n*\n* @constant\n* @type {RegExp}\n* @default /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/\n*/\nvar RE_UTF16_UNPAIRED_SURROGATE = reUtf16UnpairedSurrogate(); // eslint-disable-line id-length\n\n\n// EXPORTS //\n\nmodule.exports = RE_UTF16_UNPAIRED_SURROGATE;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to match a UTF-16 unpaired surrogate.\n*\n* @module @stdlib/regexp/utf16-unpaired-surrogate\n*\n* @example\n* var reUtf16UnpairedSurrogate = require( '@stdlib/regexp/utf16-unpaired-surrogate' );\n*\n* var RE_UTF16_UNPAIRED_SURROGATE = reUtf16UnpairedSurrogate();\n*\n* var bool = RE_UTF16_UNPAIRED_SURROGATE.test( '\\uD800' );\n* // returns true\n*\n* bool = RE_UTF16_UNPAIRED_SURROGATE.test( '\\uDC00' );\n* // returns true\n*\n* bool = RE_UTF16_UNPAIRED_SURROGATE.test( 'abc' );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {string} [options.flags] - regular expression flags\n* @param {boolean} [options.capture] - boolean indicating whether to wrap a regular expression matching white space characters with a capture group\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'flags': 'gm'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'flags' ) ) {\n\t\topts.flags = options.flags;\n\t\tif ( !isString( opts.flags ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'flags', opts.flags ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'capture' ) ) {\n\t\topts.capture = options.capture;\n\t\tif ( !isBoolean( opts.capture ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'capture', opts.capture ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar validate = require( './validate.js' );\n\n\n// VARIABLES //\n\nvar REGEXP_STRING = '[\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u0085\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]';\n\n\n// MAIN //\n\n/**\n* Returns a regular expression to match a white space character.\n*\n* @param {Options} [options] - function options\n* @param {string} [options.flags=''] - regular expression flags\n* @param {boolean} [options.capture=false] - boolean indicating whether to wrap a regular expression matching white space characters with a capture group\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_WHITESPACE = reWhitespace();\n*\n* var bool = RE_WHITESPACE.test( ' ' );\n* // returns true\n*\n* bool = RE_WHITESPACE.test( '\\t' );\n* // returns true\n*\n* @example\n* var replace = require( '@stdlib/string/replace' );\n* var RE_WHITESPACE = reWhitespace({\n*     'capture': true\n* });\n*\n* var str = 'Duplicate capture';\n* var out = replace( str, RE_WHITESPACE, '$1$1' );\n* // returns 'Duplicate  capture'\n*/\nfunction reWhitespace( options ) {\n\tvar opts;\n\tvar err;\n\tif ( arguments.length > 0 ) {\n\t\topts = {};\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tif ( opts.capture ) {\n\t\t\treturn new RegExp( '('+REGEXP_STRING+')', opts.flags );\n\t\t}\n\t\treturn new RegExp( REGEXP_STRING, opts.flags );\n\t}\n\treturn /[\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u0085\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]/; // eslint-disable-line no-control-regex\n}\n\n\n// EXPORTS //\n\nmodule.exports = reWhitespace;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reWhitespace = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Matches a white space character.\n*\n* Regular expression: `/([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u0085\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF])/`\n*\n* -   `()`\n*     -   create a capture group\n*\n* -   `[]`\n*     -   match any one of the listed characters\n*\n* -   `\\u0009`\n*     -   character tabulation (horizontal tab; `\\t`)\n*\n* -   `\\u000A`\n*     -   line feed (LF; `\\n`)\n*\n* -   `\\u000B`\n*     -   line tabulation (vertical tab; `\\v`)\n*\n* -   `\\u000C`\n*     -   form feed (`\\f`)\n*\n* -   `\\u000D`\n*     -   carriage return (CR; `\\r`)\n*\n* -   `\\u0020`\n*     -   space (most common)\n*\n* -   `\\u0085`\n*     -   next line (NEL)\n*\n* -   `\\u00A0`\n*     -   non-breaking space\n*\n* -   `\\u1680`\n*     -   Ogham space mark\n*\n* -   `\\u2000`\n*     -   en quad\n*\n* -   `\\u2001`\n*     -   em quad\n*\n* -   `\\u2002`\n*     -   en space\n*\n* -   `\\u2003`\n*     -   em space\n*\n* -   `\\u2004`\n*\n*     -   three-per-em space (thick space)\n*\n* -   `\\u2005`\n*     -   four-per-em space (mid space)\n*\n* -   `\\u2006`\n*     -   six-per-em space\n*\n* -   `\\u2007`\n*     -   figure space\n*\n* -   `\\u2008`\n*     -   punctuation space\n*\n* -   `\\u2009`\n*     -   thin space\n*\n* -   `\\u200A`\n*     -   hair space\n*\n* -   `\\u2028`\n*     -   line separator\n*\n* -   `\\u2029`\n*     -   paragraph separator\n*\n* -   `\\u202F`\n*     -   narrow no-break space\n*\n* -   `\\u205F`\n*     -   medium mathematical space\n*\n* -   `\\u3000`\n*     -   ideographic space\n*\n* -   `\\uFEFF`\n*     -   zero width non-breaking space\n*\n* ## Notes\n*\n* -   Matches the 25 characters defined as white space (\"WSpace=Y\",\"WS\") characters in the Unicode 9.0 character database.\n* -   Matches one related white space character without the Unicode character property \"WSpace=Y\" (zero width non-breaking space which was deprecated as of Unicode 3.2).\n*\n* @constant\n* @type {RegExp}\n* @default /([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u0085\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF])/\n* @see [whitespace]{@link https://en.wikipedia.org/wiki/Whitespace_character}\n*/\nvar REGEXP_CAPTURE = reWhitespace({\n\t'capture': true\n});\n\n\n// EXPORTS //\n\nmodule.exports = REGEXP_CAPTURE;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reWhitespace = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Matches a white space character.\n*\n* Regular expression: `/[\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u0085\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]/`\n*\n* -   `[]`\n*     -   match any one of the listed characters\n*\n* -   `\\u0009`\n*     -   character tabulation (horizontal tab; `\\t`)\n*\n* -   `\\u000A`\n*     -   line feed (LF; `\\n`)\n*\n* -   `\\u000B`\n*     -   line tabulation (vertical tab; `\\v`)\n*\n* -   `\\u000C`\n*     -   form feed (`\\f`)\n*\n* -   `\\u000D`\n*     -   carriage return (CR; `\\r`)\n*\n* -   `\\u0020`\n*     -   space (most common)\n*\n* -   `\\u0085`\n*     -   next line (NEL)\n*\n* -   `\\u00A0`\n*     -   non-breaking space\n*\n* -   `\\u1680`\n*     -   Ogham space mark\n*\n* -   `\\u2000`\n*     -   en quad\n*\n* -   `\\u2001`\n*     -   em quad\n*\n* -   `\\u2002`\n*     -   en space\n*\n* -   `\\u2003`\n*     -   em space\n*\n* -   `\\u2004`\n*\n*     -   three-per-em space (thick space)\n*\n* -   `\\u2005`\n*     -   four-per-em space (mid space)\n*\n* -   `\\u2006`\n*     -   six-per-em space\n*\n* -   `\\u2007`\n*     -   figure space\n*\n* -   `\\u2008`\n*     -   punctuation space\n*\n* -   `\\u2009`\n*     -   thin space\n*\n* -   `\\u200A`\n*     -   hair space\n*\n* -   `\\u2028`\n*     -   line separator\n*\n* -   `\\u2029`\n*     -   paragraph separator\n*\n* -   `\\u202F`\n*     -   narrow no-break space\n*\n* -   `\\u205F`\n*     -   medium mathematical space\n*\n* -   `\\u3000`\n*     -   ideographic space\n*\n* -   `\\uFEFF`\n*     -   zero width non-breaking space\n*\n* ## Notes\n*\n* -   Matches the 25 characters defined as white space (\"WSpace=Y\",\"WS\") characters in the Unicode 9.0 character database.\n* -   Matches one related white space character without the Unicode character property \"WSpace=Y\" (zero width non-breaking space which was deprecated as of Unicode 3.2).\n*\n* @constant\n* @type {RegExp}\n* @default /[\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u0085\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]/\n* @see [whitespace]{@link https://en.wikipedia.org/wiki/Whitespace_character}\n*/\nvar REGEXP = reWhitespace();\n\n\n// EXPORTS //\n\nmodule.exports = REGEXP;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to match a white space character.\n*\n* @module @stdlib/regexp/whitespace\n*\n* @example\n* var reWhitespace = require( '@stdlib/regexp/whitespace' );\n*\n* var RE_WHITESPACE = reWhitespace();\n*\n* var bool = RE_WHITESPACE.test( ' ' );\n* // returns true\n*\n* @example\n* var reWhitespace = require( '@stdlib/regexp/whitespace' );\n*\n* var RE_WHITESPACE = reWhitespace({\n*     'flags': 'gm'\n* });\n*\n* var bool = RE_WHITESPACE.test( '\\t' );\n* // returns true\n*\n* @example\n* var RE_WHITESPACE = require( '@stdlib/regexp/whitespace' ).REGEXP;\n*\n* var bool = RE_WHITESPACE.test( 'a' );\n* // returns false\n*\n* @example\n* var RE_WHITESPACE = require( '@stdlib/regexp/whitespace' ).REGEXP_CAPTURE;\n* var replace = require( '@stdlib/string/replace' );\n*\n* var str = 'Duplicate capture';\n* var out = replace( str, RE_WHITESPACE, '$1$1' );\n* // returns 'Duplicate  capture'\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar REGEXP_CAPTURE = require( './regexp_capture.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'REGEXP', REGEXP );\nsetReadOnly( main, 'REGEXP_CAPTURE', REGEXP_CAPTURE );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace regexp\n*/\nvar regexp = {};\n\n/**\n* @name reBasename\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/basename}\n*/\nsetReadOnly( regexp, 'reBasename', require( './../basename' ) );\n\n/**\n* @name reBasenamePosix\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/basename-posix}\n*/\nsetReadOnly( regexp, 'reBasenamePosix', require( './../basename-posix' ) );\n\n/**\n* @name reBasenameWindows\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/basename-windows}\n*/\nsetReadOnly( regexp, 'reBasenameWindows', require( './../basename-windows' ) );\n\n/**\n* @name reColorHexadecimal\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/color-hexadecimal}\n*/\nsetReadOnly( regexp, 'reColorHexadecimal', require( './../color-hexadecimal' ) );\n\n/**\n* @name reDecimalNumber\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/decimal-number}\n*/\nsetReadOnly( regexp, 'reDecimalNumber', require( './../decimal-number' ) );\n\n/**\n* @name reDirname\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/dirname}\n*/\nsetReadOnly( regexp, 'reDirname', require( './../dirname' ) );\n\n/**\n* @name reDirnamePosix\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/dirname-posix}\n*/\nsetReadOnly( regexp, 'reDirnamePosix', require( './../dirname-posix' ) );\n\n/**\n* @name reDirnameWindows\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/dirname-windows}\n*/\nsetReadOnly( regexp, 'reDirnameWindows', require( './../dirname-windows' ) );\n\n/**\n* @name reDurationString\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/duration-string}\n*/\nsetReadOnly( regexp, 'reDurationString', require( './../duration-string' ) );\n\n/**\n* @name reEOL\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/eol}\n*/\nsetReadOnly( regexp, 'reEOL', require( './../eol' ) );\n\n/**\n* @name reExtendedLengthPath\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/extended-length-path}\n*/\nsetReadOnly( regexp, 'reExtendedLengthPath', require( './../extended-length-path' ) );\n\n/**\n* @name reExtname\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/extname}\n*/\nsetReadOnly( regexp, 'reExtname', require( './../extname' ) );\n\n/**\n* @name reExtnamePosix\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/extname-posix}\n*/\nsetReadOnly( regexp, 'reExtnamePosix', require( './../extname-posix' ) );\n\n/**\n* @name reExtnameWindows\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/extname-windows}\n*/\nsetReadOnly( regexp, 'reExtnameWindows', require( './../extname-windows' ) );\n\n/**\n* @name reFilename\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/filename}\n*/\nsetReadOnly( regexp, 'reFilename', require( './../filename' ) );\n\n/**\n* @name reFilenamePosix\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/filename-posix}\n*/\nsetReadOnly( regexp, 'reFilenamePosix', require( './../filename-posix' ) );\n\n/**\n* @name reFilenameWindows\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/filename-windows}\n*/\nsetReadOnly( regexp, 'reFilenameWindows', require( './../filename-windows' ) );\n\n/**\n* @name reFunctionName\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/function-name}\n*/\nsetReadOnly( regexp, 'reFunctionName', require( './../function-name' ) );\n\n/**\n* @name reNativeFunction\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/native-function}\n*/\nsetReadOnly( regexp, 'reNativeFunction', require( './../native-function' ) );\n\n/**\n* @name reRegExp\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/regexp}\n*/\nsetReadOnly( regexp, 'reRegExp', require( './../regexp' ) );\n\n/**\n* @name reviveRegExp\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/reviver}\n*/\nsetReadOnly( regexp, 'reviveRegExp', require( './../reviver' ) );\n\n/**\n* @name reSemVer\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/semver}\n*/\nsetReadOnly( regexp, 'reSemVer', require( './../semver' ) );\n\n/**\n* @name regexp2json\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/to-json}\n*/\nsetReadOnly( regexp, 'regexp2json', require( './../to-json' ) );\n\n/**\n* @name reUncPath\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/unc-path}\n*/\nsetReadOnly( regexp, 'reUncPath', require( './../unc-path' ) );\n\n/**\n* @name reUtf16SurrogatePair\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/utf16-surrogate-pair}\n*/\nsetReadOnly( regexp, 'reUtf16SurrogatePair', require( './../utf16-surrogate-pair' ) );\n\n/**\n* @name reUtf16UnpairedSurrogate\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/utf16-unpaired-surrogate}\n*/\nsetReadOnly( regexp, 'reUtf16UnpairedSurrogate', require( './../utf16-unpaired-surrogate' ) );\n\n/**\n* @name reWhitespace\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/whitespace}\n*/\nsetReadOnly( regexp, 'reWhitespace', require( './../whitespace' ) );\n\n\n// EXPORTS //\n\nmodule.exports = regexp;\n"],
  "mappings": "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",
  "names": ["require_main", "__commonJSMin", "exports", "module", "reBasenamePosix", "require_regexp", "__commonJSMin", "exports", "module", "reBasenamePosix", "RE_BASENAME_POSIX", "require_lib", "__commonJSMin", "exports", "module", "setReadOnly", "main", "REGEXP", "require_main", "__commonJSMin", "exports", "module", "reBasenameWindows", "require_regexp", "__commonJSMin", "exports", "module", "reBasenameWindows", "RE_BASENAME_WINDOWS", "require_lib", "__commonJSMin", "exports", "module", "setReadOnly", "main", "REGEXP", "require_main", "__commonJSMin", "exports", "module", "contains", "format", "posix", "win32", "IS_WINDOWS", "PLATFORMS", "reBasename", "platform", "require_lib", "__commonJSMin", "exports", "module", "setReadOnly", "posix", "win32", "IS_WINDOWS", "main", "REGEXP", "require_main", "__commonJSMin", "exports", "module", "contains", "format", "MODES", "reColorHexadecimal", "mode", "require_lib", "__commonJSMin", "exports", "module", "setReadOnly", "main", "RE_COLOR_HEXADECIMAL_EITHER", "RE_COLOR_HEXADECIMAL_SHORTHAND", "RE_COLOR_HEXADECIMAL", "require_validate", "__commonJSMin", "exports", "module", "isObject", "hasOwnProp", "isBoolean", "isString", "format", "validate", "opts", "options", "require_main", "__commonJSMin", "exports", "module", "validate", "REGEXP_STRING", "reDecimalNumber", "options", "opts", "err", "require_regexp_capture", "__commonJSMin", "exports", "module", "reDecimalNumber", "REGEXP_CAPTURE", "require_regexp", "__commonJSMin", "exports", "module", "reDecimalNumber", "REGEXP", "require_lib", "__commonJSMin", "exports", "module", "setReadOnly", "main", "REGEXP_CAPTURE", "REGEXP", "require_main", "__commonJSMin", "exports", "module", "reDirnamePosix", "require_regexp", "__commonJSMin", "exports", "module", "reDirnamePosix", "RE_DIRNAME_POSIX", "require_lib", "__commonJSMin", "exports", "module", "setReadOnly", "main", "REGEXP", "require_main", "__commonJSMin", "exports", "module", "reDirnameWindows", "require_regexp", "__commonJSMin", "exports", "module", "reDirnameWindows", "RE_DIRNAME_WINDOWS", "require_lib", "__commonJSMin", "exports", "module", "setReadOnly", "main", "REGEXP", "require_main", "__commonJSMin", "exports", "module", "contains", "format", "posix", "win32", "IS_WINDOWS", "PLATFORMS", "reDirname", "platform", "require_lib", "__commonJSMin", "exports", "module", "setReadOnly", "posix", "win32", "IS_WINDOWS", "main", "REGEXP", "require_main", "__commonJSMin", "exports", "module", "reDurationString", "require_regexp", "__commonJSMin", "exports", "module", "reDurationString", "RE_DURATION", "require_lib", "__commonJSMin", "exports", "module", "setReadOnly", "main", "REGEXP", "require_validate", "__commonJSMin", "exports", "module", "isObject", "hasOwnProp", "isBoolean", "isString", "format", "validate", "opts", "options", "require_main", "__commonJSMin", "exports", "module", "validate", "REGEXP_STRING", "reEOL", "options", "opts", "err", "require_regexp_capture", "__commonJSMin", "exports", "module", "reEOL", "REGEXP_CAPTURE", "require_regexp", "__commonJSMin", "exports", "module", "reEOL", "REGEXP", "require_lib", "__commonJSMin", "exports", "module", "setReadOnly", "main", "REGEXP_CAPTURE", "REGEXP", "require_main", "__commonJSMin", "exports", "module", "reExtendedLengthPath", "require_regexp", "__commonJSMin", "exports", "module", "reExtendedLengthPath", "REGEXP", "require_lib", "__commonJSMin", "exports", "module", "setReadOnly", "main", "REGEXP", "require_main", "__commonJSMin", "exports", "module", "reExtnamePosix", "require_regexp", "__commonJSMin", "exports", "module", "reExtnamePosix", "RE_EXTNAME_POSIX", "require_lib", "__commonJSMin", "exports", "module", "setReadOnly", "main", "REGEXP", "require_main", "__commonJSMin", "exports", "module", "reExtnameWindows", "require_regexp", "__commonJSMin", "exports", "module", "reExtnameWindows", "RE_EXTNAME_WINDOWS", "require_lib", "__commonJSMin", "exports", "module", "setReadOnly", "main", "REGEXP", "require_main", "__commonJSMin", "exports", "module", "contains", "format", "posix", "win32", "IS_WINDOWS", "PLATFORMS", "reExtname", "platform", "require_lib", "__commonJSMin", "exports", "module", "setReadOnly", "posix", "win32", "IS_WINDOWS", "main", "REGEXP", "require_main", "__commonJSMin", "exports", "module", "reFilenamePosix", "require_regexp", "__commonJSMin", "exports", "module", "reFilenamePosix", "RE_FILENAME_POSIX", "require_lib", "__commonJSMin", "exports", "module", "setReadOnly", "main", "REGEXP", "require_main", "__commonJSMin", "exports", "module", "reFilenameWindows", "require_regexp", "__commonJSMin", "exports", "module", "reFilenameWindows", "RE_FILENAME_WINDOWS", "require_lib", "__commonJSMin", "exports", "module", "setReadOnly", "main", "REGEXP", "require_main", "__commonJSMin", "exports", "module", "contains", "format", "posix", "win32", "IS_WINDOWS", "PLATFORMS", "reFilename", "platform", "require_lib", "__commonJSMin", "exports", "module", "setReadOnly", "posix", "win32", "IS_WINDOWS", "main", "REGEXP", "require_main", "__commonJSMin", "exports", "module", "reFunctionName", "require_regexp", "__commonJSMin", "exports", "module", "reFunctionName", "RE_FUNCTION_NAME", "require_lib", "__commonJSMin", "exports", "module", "setReadOnly", "main", "REGEXP", "require_main", "__commonJSMin", "exports", "module", "Fcn", "function2string", "reNativeFunction", "str", "require_regexp", "__commonJSMin", "exports", "module", "reNativeFunction", "RE_NATIVE_FUNCTION", "require_lib", "__commonJSMin", "exports", "module", "setReadOnly", "main", "REGEXP", "require_main", "__commonJSMin", "exports", "module", "reRegExp", "require_regexp", "__commonJSMin", "exports", "module", "reRegExp", "RE_REGEXP", "require_lib", "__commonJSMin", "exports", "module", "setReadOnly", "main", "REGEXP", "require_main", "__commonJSMin", "exports", "module", "reviver", "key", "value", "require_lib", "__commonJSMin", "exports", "module", "main", "require_main", "__commonJSMin", "exports", "module", "reSemVer", "require_regexp", "__commonJSMin", "exports", "module", "reSemVer", "RE_SEMVER", "require_lib", "__commonJSMin", "exports", "module", "setReadOnly", "main", "REGEXP", "require_main", "__commonJSMin", "exports", "module", "isRegExp", "format", "SLASH", "regexp2json", "re", "require_lib", "__commonJSMin", "exports", "module", "main", "require_main", "__commonJSMin", "exports", "module", "reUncPath", "require_regexp", "__commonJSMin", "exports", "module", "reUncPath", "RE_UNC_PATH", "require_lib", "__commonJSMin", "exports", "module", "setReadOnly", "main", "REGEXP", "require_main", "__commonJSMin", "exports", "module", "reUtf16SurrogatePair", "require_regexp", "__commonJSMin", "exports", "module", "reUtf16SurrogatePair", "RE_UTF16_SURROGATE_PAIR", "require_lib", "__commonJSMin", "exports", "module", "setReadOnly", "main", "REGEXP", "require_main", "__commonJSMin", "exports", "module", "reUtf16UnpairedSurrogate", "require_regexp", "__commonJSMin", "exports", "module", "reUtf16UnpairedSurrogate", "RE_UTF16_UNPAIRED_SURROGATE", "require_lib", "__commonJSMin", "exports", "module", "setReadOnly", "main", "REGEXP", "require_validate", "__commonJSMin", "exports", "module", "isObject", "hasOwnProp", "isBoolean", "isString", "format", "validate", "opts", "options", "require_main", "__commonJSMin", "exports", "module", "validate", "REGEXP_STRING", "reWhitespace", "options", "opts", "err", "require_regexp_capture", "__commonJSMin", "exports", "module", "reWhitespace", "REGEXP_CAPTURE", "require_regexp", "__commonJSMin", "exports", "module", "reWhitespace", "REGEXP", "require_lib", "__commonJSMin", "exports", "module", "setReadOnly", "main", "REGEXP_CAPTURE", "REGEXP", "setReadOnly", "regexp"]
}
