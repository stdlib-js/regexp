{"version":3,"file":"index.mjs","sources":["../basename-posix/lib/main.js","../basename-posix/lib/index.js","../basename-posix/lib/regexp.js","../basename-windows/lib/main.js","../basename-windows/lib/index.js","../basename-windows/lib/regexp.js","../basename/lib/main.js","../basename/lib/index.js","../color-hexadecimal/lib/main.js","../color-hexadecimal/lib/index.js","../decimal-number/lib/validate.js","../decimal-number/lib/main.js","../decimal-number/lib/index.js","../decimal-number/lib/regexp_capture.js","../decimal-number/lib/regexp.js","../dirname-posix/lib/main.js","../dirname-posix/lib/index.js","../dirname-posix/lib/regexp.js","../dirname-windows/lib/main.js","../dirname-windows/lib/index.js","../dirname-windows/lib/regexp.js","../dirname/lib/main.js","../dirname/lib/index.js","../eol/lib/validate.js","../eol/lib/main.js","../eol/lib/index.js","../eol/lib/regexp_capture.js","../eol/lib/regexp.js","../extended-length-path/lib/main.js","../extended-length-path/lib/index.js","../extended-length-path/lib/regexp.js","../extname-posix/lib/main.js","../extname-posix/lib/index.js","../extname-posix/lib/regexp.js","../extname-windows/lib/main.js","../extname-windows/lib/index.js","../extname-windows/lib/regexp.js","../extname/lib/main.js","../extname/lib/index.js","../filename-posix/lib/main.js","../filename-posix/lib/index.js","../filename-posix/lib/regexp.js","../filename-windows/lib/main.js","../filename-windows/lib/index.js","../filename-windows/lib/regexp.js","../filename/lib/main.js","../filename/lib/index.js","../function-name/lib/main.js","../function-name/lib/index.js","../function-name/lib/regexp.js","../native-function/lib/main.js","../native-function/lib/index.js","../native-function/lib/regexp.js","../regexp/lib/main.js","../regexp/lib/index.js","../regexp/lib/regexp.js","../unc-path/lib/main.js","../unc-path/lib/index.js","../unc-path/lib/regexp.js","../utf16-surrogate-pair/lib/main.js","../utf16-surrogate-pair/lib/index.js","../utf16-surrogate-pair/lib/regexp.js","../utf16-unpaired-surrogate/lib/main.js","../utf16-unpaired-surrogate/lib/index.js","../utf16-unpaired-surrogate/lib/regexp.js","../whitespace/lib/validate.js","../whitespace/lib/main.js","../whitespace/lib/index.js","../whitespace/lib/regexp_capture.js","../whitespace/lib/regexp.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture the last part of a POSIX path.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_BASENAME_POSIX = reBasenamePosix();\n* var base = RE_BASENAME_POSIX.exec( 'foo/bar/index.js' )[ 1 ];\n* // returns 'index.js'\n*/\nfunction reBasenamePosix() {\n\treturn /^(?:\\/?|)(?:[\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(?:\\.[^.\\/]*|))(?:[\\/]*)$/; // eslint-disable-line no-useless-escape\n}\n\n\n// EXPORTS //\n\nmodule.exports = reBasenamePosix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to capture the last part of a POSIX path.\n*\n* @module @stdlib/regexp/basename-posix\n*\n* @example\n* var reBasenamePosix = require( '@stdlib/regexp/basename-posix' );\n*\n* var RE_BASENAME_POSIX = reBasenamePosix();\n* var base = RE_BASENAME_POSIX.exec( 'foo/bar/index.js' )[ 1 ];\n* // returns 'index.js'\n*\n* @example\n* var reBasenamePosix = require( '@stdlib/regexp/basename-posix' );\n*\n* var base = reBasenamePosix.REGEXP.exec( 'foo/bar/index.js' )[ 1 ]\n* // returns 'index.js'\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar reBasenamePosix = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( reBasenamePosix, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = reBasenamePosix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reBasenamePosix = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Captures a POSIX path basename. Modified from Node.js [source][1].\n*\n* Regular expression: `/^(?:\\/?|)(?:[\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(?:\\.[^.\\/]*|))(?:[\\/]*)$/`\n*\n* -   `\\^`\n*     -   match any string which begins with\n*\n* -   `(?:)`\n*     -   capture but do not remember (root)\n*\n* -   `\\/?`\n*     -   match a / literal zero or one time\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (directory)\n*\n* -   `[\\s\\S]`\n*     -   any space or non-space character\n*\n* -   `*?`\n*     -   zero or more times, but non-greedily (shortest possible match)\n*\n* -   `()`\n*     -   capture (basename)\n*\n* -   `\\.{1,2}`\n*     -   match a `.` literal one or two times\n*\n* -   `|`\n*     -   OR\n*\n* -   `[^\\/]+?`\n*     -   match anything which is not a `/` literal one or more times, but do so non-greedily\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (extname)\n*\n* -   `\\.`\n*     -   match a `.` literal\n*\n* -   `[^.\\/]`\n*     -   match anything which is not a `.` or `/` literal\n*\n* -   `*`\n*     -   zero or more times\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (trailing slash)\n*\n* -   `[\\/]`\n*     -   match a `/` literal\n*\n* -   `*`\n*     -   zero or more times\n*\n* -   `$`\n*     -   end of string\n*\n* [1]: https://github.com/nodejs/node/blob/1a3b295d0f46b2189bd853800b1e63ab4d106b66/lib/path.js#L406\n*\n* @constant\n* @type {RegExp}\n* @default /^(?:\\/?|)(?:[\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(?:\\.[^.\\/]*|))(?:[\\/]*)$/\n*/\nvar RE_BASENAME_POSIX = reBasenamePosix();\n\n\n// EXPORTS //\n\nmodule.exports = RE_BASENAME_POSIX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture the last part of a Windows path.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE = reBasenameWindows();\n* var base = RE.exec( 'foo\\\\bar\\\\index.js' )[ 1 ];\n* // returns 'index.js'\n*/\nfunction reBasenameWindows() {\n\treturn /^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+|)(?:[\\\\\\/]|)(?:[\\s\\S]*?)((?:\\.{1,2}|[^\\\\\\/]+?|)(?:\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/; // eslint-disable-line no-useless-escape\n}\n\n\n// EXPORTS //\n\nmodule.exports = reBasenameWindows;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to capture the last part of a Windows path.\n*\n* @module @stdlib/regexp/basename-windows\n*\n* @example\n* var reBasenameWindows = require( '@stdlib/regexp/basename-windows' );\n* var RE_BASENAME_WINDOWS = reBasenameWindows();\n*\n* var base = RE_BASENAME_WINDOWS.exec( 'foo\\\\bar\\\\index.js' )[ 1 ];\n* // returns 'index.js'\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar reBasenameWindows = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( reBasenameWindows, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = reBasenameWindows;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reBasenameWindows = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Capture a Windows path basename. Modified from Node.js [source][1].\n*\n* Regular expression: `/^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+|)(?:[\\\\\\/]|)(?:[\\s\\S]*?)((?:\\.{1,2}|[^\\\\\\/]+?|)(?:\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/`\n*\n* -   `^`\n*     -   match any string which begins with\n*\n* -   `(?:)`\n*     -   capture but do not remember (device)\n*\n* -   `[a-zA-Z]:`\n*     -   match any upper or lowercase letter and a `:` literal\n*\n* -   `|`\n*     -   OR\n*\n* -   `[\\\\\\/]`\n*     -   match a `\\` or `/` literal character\n*\n* -   `{2}`\n*     -   exactly `2` times\n*\n* -   `[^\\\\\\/]+`\n*     -   match anything but a `\\` or `/` literal one or more times\n*\n* -   `[\\\\\\/]+`\n*     -   match a `\\` or `/` literal one or more times\n*\n* -   `[^\\\\\\/]+`\n*     -   match anything but a `\\` or `/` literal one or more times\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (slash)\n*\n* -   `[\\\\\\/]`\n*     -   match a `\\` or `/` literal\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (dirname)\n*\n* -   `[\\s\\S]`\n*     -   match any space or non-space character\n*\n* -   `*?`\n*     -   zero or more times but do so non-greedily\n*\n* -   `()`\n*     -   capture (basename)\n*\n* -   `(?:)`\n*     -   capture but do not remember\n*\n* -   `\\.{1,2}`\n*     -   match a `.` literal one or two times\n*\n* -   `|`\n*     -   OR\n*\n* -   `[^\\\\\\/]+?`\n*     -   match anything but a `\\` or `/` literal one or more times, but do so non-greedily\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (extname)\n*\n* -   `\\.`\n*     -   match a `.` literal\n*\n* -   `[^.\\/\\\\]*`\n*     -   match anything but a `.`, `/`, or `\\` literal zero or more times\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (trailing slash)\n*\n* -   `[\\\\\\/]*`\n*     -   match a `\\` or `/` literal zero or more times\n*\n* -   `$`\n*     -   end of string\n*\n* [1]: https://github.com/nodejs/node/blob/1a3b295d0f46b2189bd853800b1e63ab4d106b66/lib/path.js#L65\n*\n* @constant\n* @type {RegExp}\n* @default /^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+|)(?:[\\\\\\/]|)(?:[\\s\\S]*?)((?:\\.{1,2}|[^\\\\\\/]+?|)(?:\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/\n*/\nvar RE_BASENAME_WINDOWS = reBasenameWindows();\n\n\n// EXPORTS //\n\nmodule.exports = RE_BASENAME_WINDOWS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar contains = require( '@stdlib/assert/contains' );\nvar format = require( '@stdlib/string/format' );\nvar posix = require( './../../basename-posix' );\nvar win32 = require( './../../basename-windows' );\nvar IS_WINDOWS = require( '@stdlib/assert/is-windows' );\n\n\n// VARIABLES //\n\nvar PLATFORMS = [ 'posix', 'win32' ];\n\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture the last part of a path.\n*\n* @param {string} [platform] - path platform (`win32` or `posix`)\n* @throws {Error} platform must be `win32` or `posix`\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE = reBasename();\n* var base = RE.exec( '/foo/bar/index.js' )[ 1 ];\n* // returns <string>\n*/\nfunction reBasename( platform ) {\n\tif ( arguments.length > 0 ) {\n\t\tif ( !contains( PLATFORMS, platform ) ) {\n\t\t\tthrow new Error( format( 'invalid argument. Must be one of the following: \"%s\". Value: `%s`.', PLATFORMS.join( '\", \"' ), platform ) );\n\t\t}\n\t}\n\tif ( platform === 'win32' || IS_WINDOWS ) {\n\t\treturn win32();\n\t}\n\t// Case: platform === 'posix'\n\treturn posix();\n}\n\n\n// EXPORTS //\n\nmodule.exports = reBasename;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to capture the last part of a path.\n*\n* @module @stdlib/regexp/basename\n*\n* @example\n* var reBasename = require( '@stdlib/regexp/basename' );\n* var RE_BASENAME = reBasename();\n*\n* // On a POSIX platform...\n* var base = RE_BASENAME.exec( '/foo/bar/index.js' )[ 1 ];\n* // returns 'index.js'\n*\n* @example\n* var reBasename = require( '@stdlib/regexp/basename' );\n* var RE_BASENAME = reBasename();\n*\n* // On a Windows platform...\n* var base = RE_BASENAME.exec( 'C:\\\\foo\\\\bar\\\\index.js' )[ 1 ];\n* // returns 'index.js'\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar posix = require( './../../basename-posix' ).REGEXP;\nvar win32 = require( './../../basename-windows' ).REGEXP;\nvar IS_WINDOWS = require( '@stdlib/assert/is-windows' );\nvar reBasename = require( './main.js' );\n\n\n// MAIN //\n\nsetReadOnly( reBasename, 'REGEXP', ( IS_WINDOWS ) ? win32 : posix );\nsetReadOnly( reBasename, 'REGEXP_POSIX', posix );\nsetReadOnly( reBasename, 'REGEXP_WIN32', win32 );\n\n\n// EXPORTS //\n\nmodule.exports = reBasename;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar contains = require( '@stdlib/assert/contains' );\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar MODES = [ 'full', 'shorthand', 'either' ];\n\n\n// MAIN //\n\n/**\n* Returns a regular expression to match a hexadecimal color.\n*\n* @param {string} [mode='full'] - color format (`full`, `shorthand`, or `either`)\n* @throws {Error} mode must be `full`, `shorthand`, or `either`\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE = reColorHexadecimal();\n* // returns <RegExp>\n*\n* var bool = RE.test( 'ffffff' );\n* // returns true\n*\n* bool = RE.test( '000' );\n* // returns false\n*/\nfunction reColorHexadecimal( mode ) {\n\tif ( arguments.length > 0 ) {\n\t\tif ( !contains( MODES, mode ) ) {\n\t\t\tthrow new Error( format( 'invalid argument. Mode must be one of the following: \"%s\". Value: `%s`.', MODES.join( '\", \"' ), mode ) );\n\t\t}\n\t}\n\tif ( mode === 'shorthand' ) {\n\t\treturn /^[0-9A-F]{3}$/i;\n\t}\n\tif ( mode === 'either' ) {\n\t\treturn /^[0-9A-F]{3}$|^[0-9A-F]{6}$/i;\n\t}\n\t// Case: mode === 'full'\n\treturn /^[0-9A-F]{6}$/i;\n}\n\n\n// EXPORTS //\n\nmodule.exports = reColorHexadecimal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to match a hexadecimal color.\n*\n* @module @stdlib/regexp/color-hexadecimal\n*\n* @example\n* var reColorHexadecimal = require( '@stdlib/regexp/color-hexadecimal' );\n* var RE_COLOR_HEXADECIMAL = reColorHexadecimal();\n*\n* var bool = RE_COLOR_HEXADECIMAL.test( '474747' );\n* // returns true\n*\n* bool = RE_COLOR_HEXADECIMAL.test( 'ZZZZZZ' );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar reColorHexadecimal = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Match any `3` or `6` letter character sequence only containing numbers or the letters `A-Fa-f`.\n*\n* Regular expression: `/^[0-9A-F]{3}$|^[0-9A-F]{6}$/i`\n*\n* -   `/^`\n*     -   match anything that begins with\n*\n* -   `[0-9A-F]`\n*     -   match anything that contains the numbers `0-9` and/or the letters `A-F`\n*\n* -   `{3}`\n*     -   exactly three matched characters\n*\n* -   `$`\n*     -   end of character sequence\n*\n* -   `|`\n*     -   or\n*\n* -   `^`\n*     -   match anything that begins with\n*\n* -   `[0-9A-F]`\n*     -   match anything that contains the numbers `0-9` and/or the letters `A-F`\n*\n* -   `{6}`\n*     -   exactly six matched characters\n*\n* -   `$`\n*     -   end of character sequence\n*\n* -   `/i`\n*     -   ignore case\n*\n* @constant\n* @type {RegExp}\n* @default /^[0-9A-F]{3}$|^[0-9A-F]{6}$/i\n*/\nvar RE_COLOR_HEXADECIMAL_EITHER = /^[0-9A-F]{3}$|^[0-9A-F]{6}$/i;\n\n// Same as above but only for 3 letter sequences:\nvar RE_COLOR_HEXADECIMAL_SHORTHAND = /^[0-9A-F]{3}$/i;\n\n// Same as above but only for 6 letter sequences:\nvar RE_COLOR_HEXADECIMAL = /^[0-9A-F]{6}$/i;\n\n\n// MAIN //\n\nsetReadOnly( reColorHexadecimal, 'REGEXP', RE_COLOR_HEXADECIMAL );\nsetReadOnly( reColorHexadecimal, 'REGEXP_SHORTHAND', RE_COLOR_HEXADECIMAL_SHORTHAND );\nsetReadOnly( reColorHexadecimal, 'REGEXP_EITHER', RE_COLOR_HEXADECIMAL_EITHER );\n\n\n// EXPORTS //\n\nmodule.exports = reColorHexadecimal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {string} [options.flags] - regular expression flags\n* @param {boolean} [options.capture] - boolean indicating whether to wrap a regular expression matching a decimal number with a capture group\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'flags': 'gm'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'flags' ) ) {\n\t\topts.flags = options.flags;\n\t\tif ( !isString( opts.flags ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'flags', opts.flags ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'capture' ) ) {\n\t\topts.capture = options.capture;\n\t\tif ( !isBoolean( opts.capture ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'capture', opts.capture ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar validate = require( './validate.js' );\n\n\n// VARIABLES //\n\nvar REGEXP_STRING = '[-+]{0,1}[0-9]*\\\\.[0-9]+';\n\n\n// MAIN //\n\n/**\n* Returns a regular expression to match a decimal number.\n*\n* @param {Options} [options] - function options\n* @param {string} [options.flags=''] - regular expression flags\n* @param {boolean} [options.capture=false] - boolean indicating whether to create a capture group for the match\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_DECIMAL_NUMBER = reDecimalNumber();\n*\n* var bool = RE_DECIMAL_NUMBER.test( 'beep 1.0 boop' );\n* // returns true\n*\n* @example\n* var RE_DECIMAL_NUMBER = reDecimalNumber({\n*     'flags': 'gm'\n* });\n* var bool = RE_DECIMAL_NUMBER.test( 'beep 1.0 boop' );\n* // returns true\n*/\nfunction reDecimalNumber( options ) {\n\tvar opts;\n\tvar err;\n\tif ( arguments.length > 0 ) {\n\t\topts = {};\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tif ( opts.capture ) {\n\t\t\treturn new RegExp( '('+REGEXP_STRING+')', opts.flags );\n\t\t}\n\t\treturn new RegExp( REGEXP_STRING, opts.flags );\n\t}\n\treturn /[-+]{0,1}[0-9]*\\.[0-9]+/;\n}\n\n\n// EXPORTS //\n\nmodule.exports = reDecimalNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to match a decimal number.\n*\n* @module @stdlib/regexp/decimal-number\n*\n* @example\n* var reDecimalNumber = require( '@stdlib/regexp/decimal-number' );\n*\n* var RE_DECIMAL_NUMBER = reDecimalNumber();\n*\n* var bool = RE_DECIMAL_NUMBER.test( 'beep 1.0 boop' );\n* // returns true\n*\n* bool = RE_DECIMAL_NUMBER.test( 'beep 1 boop' );\n* // returns false\n*\n* @example\n* var reDecimalNumber = require( '@stdlib/regexp/decimal-number' );\n*\n* var RE_DECIMAL_NUMBER = reDecimalNumber({\n*     'flags': 'gm'\n* });\n* var bool = RE_DECIMAL_NUMBER.test( 'beep 1.0 boop' );\n* // returns true\n*\n* @example\n* var reDecimalNumber = require( '@stdlib/regexp/decimal-number' );\n*\n* var bool = reDecimalNumber.REGEXP.test( '2:3' );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar reDecimalNumber = require( './main.js' );\nvar REGEXP_CAPTURE = require( './regexp_capture.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( reDecimalNumber, 'REGEXP', REGEXP );\nsetReadOnly( reDecimalNumber, 'REGEXP_CAPTURE', REGEXP_CAPTURE );\n\n\n// EXPORTS //\n\nmodule.exports = reDecimalNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reDecimalNumber = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Captures a decimal number.\n*\n* Regular expression: `/([-+]{0,1}[0-9]*\\.[0-9]+)/`\n*\n* -   `()`\n*     -   capture\n*\n* -   `[-+]{0,1}`\n*     -   match a minus or plus sign zero or one time\n*\n* -   `[0-9]*`\n*     -   match the characters `[0-9]` zero or more times\n*\n* -   `\\.`\n*     -   match a `.` literal\n*\n* -   `[0-9]+`\n*     -   match the characters `[0-9]` one or more times\n*\n*\n* @constant\n* @type {RegExp}\n* @default /([-+]{0,1}[0-9]*\\.[0-9]+)/\n*/\nvar REGEXP_CAPTURE = reDecimalNumber({\n\t'capture': true\n});\n\n\n// EXPORTS //\n\nmodule.exports = REGEXP_CAPTURE;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reDecimalNumber = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Matches a decimal number.\n*\n* Regular expression: `/[-+]{0,1}[0-9]*\\.[0-9]+/`\n*\n* -   `[-+]{0,1}`\n*     -   match a minus or plus sign zero or one time\n*\n* -   `[0-9]*`\n*     -   match the characters `[0-9]` zero or more times\n*\n* -   `\\.`\n*     -   match a `.` literal\n*\n* -   `[0-9]+`\n*     -   match the characters `[0-9]` one or more times\n*\n*\n* @constant\n* @type {RegExp}\n* @default /[-+]{0,1}[0-9]*\\.[0-9]+/\n*/\nvar REGEXP = reDecimalNumber();\n\n\n// EXPORTS //\n\nmodule.exports = REGEXP;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture a POSIX path dirname.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_DIRNAME_POSIX = reDirnamePosix();\n* var dir = RE_DIRNAME_POSIX.exec( 'foo/bar/index.js' )[ 1 ];\n* // returns 'foo/bar'\n*/\nfunction reDirnamePosix() {\n\treturn /^((?:\\.(?![^\\/]))|(?:(?:\\/?|)(?:[\\s\\S]*?)))(?:\\/+?|)(?:(?:\\.{1,2}|[^\\/]+?|)(?:\\.[^.\\/]*|))(?:[\\/]*)$/; // eslint-disable-line no-useless-escape\n}\n\n\n// EXPORTS //\n\nmodule.exports = reDirnamePosix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to capture a POSIX path dirname.\n*\n* @module @stdlib/regexp/dirname-posix\n*\n* @example\n* var reDirnamePosix = require( '@stdlib/regexp/dirname-posix' );\n*\n* var RE_DIRNAME_POSIX = reDirnamePosix();\n* var dir = RE_DIRNAME_POSIX.exec( 'foo/bar/index.js' )[ 1 ];\n* // returns 'foo/bar'\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar reDirnamePosix = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( reDirnamePosix, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = reDirnamePosix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reDirnamePosix = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Captures a POSIX path dirname. Modified from Node.js [source][1].\n*\n* Regular expression: `/^((?:\\.(?![^\\/]))|(?:(?:\\/?|)(?:[\\s\\S]*?)))(?:\\/+?|)(?:(?:\\.{1,2}|[^\\/]+?|)(?:\\.[^.\\/]*|))(?:[\\/]*)$/`\n*\n* -   `\\^`\n*     -   match any string which begins with\n*\n* -   `()`\n*     -   capture (includes root and dirname)\n*\n* -   `(?:)`\n*     -   capture but do not remember (handles `'.'` and `'./'` cases)\n*\n* -   `\\.(?![^\\/])`\n*     -   a `.` literal if the `.` literal is NOT followed by something other than a `/` literal\n*\n* -   `|`\n*     -   OR\n*\n* -   `(?:)`\n*     -   capture but do not remember (handles root+dirname case)\n*\n* -   `(?:)`\n*     -   capture but do not remember (root)\n*\n* -   `\\/?`\n*     -   match a `/` literal zero or one time\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (directory)\n*\n* -   `[\\s\\S]`\n*     -   any space or non-space character\n*\n* -   `*?`\n*     -   zero or more times, but non-greedily (shortest possible match)\n*\n* -   `(?:)`\n*     -   capture but do not remember (slash)\n*\n* -   `\\/+?`\n*     -   a `/` literal one or more times, but do so non-greedily\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (basename)\n*\n* -   `\\.{1,2}`\n*     -   match a `.` literal one or two times\n*\n* -   `|`\n*     -   OR\n*\n* -   `[^\\/]+?`\n*     -   match anything which is not a `/` literal one or more times, but do so non-greedily\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (extname)\n*\n* -   `\\.`\n*     -   match a `.` literal\n*\n* -   `[^.\\/]`\n*     -   match anything which is not a `.` or `/` literal\n*\n* -   `*`\n*     -   zero or more times\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (trailing slash)\n*\n* -   `[\\/]`\n*     -   match a `/` literal\n*\n* -   `*`\n*     -   zero or more times\n*\n* -   `$`\n*     -   end of string\n*\n* [1]: https://github.com/nodejs/node/blob/1a3b295d0f46b2189bd853800b1e63ab4d106b66/lib/path.js#L406\n*\n* @constant\n* @type {RegExp}\n* @default /^((?:\\.(?![^\\/]))|(?:(?:\\/?|)(?:[\\s\\S]*?)))(?:\\/+?|)(?:(?:\\.{1,2}|[^\\/]+?|)(?:\\.[^.\\/]*|))(?:[\\/]*)$/\n*/\nvar RE_DIRNAME_POSIX = reDirnamePosix();\n\n\n// EXPORTS //\n\nmodule.exports = RE_DIRNAME_POSIX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture a Windows path dirname.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_DIRNAME_WINDOWS = reDirnameWindows();\n* var dir = RE_DIRNAME_WINDOWS.exec( 'foo\\\\bar\\\\index.js' )[ 1 ];\n* // returns 'foo\\\\bar'\n*/\nfunction reDirnameWindows() {\n\treturn /^((?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+|)(?:[\\\\\\/]|)(?:[\\s\\S]*?))(?:[\\\\\\/]+?|)(?:(?:\\.{1,2}|[^\\\\\\/]+?|)(?:\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/; // eslint-disable-line no-useless-escape\n}\n\n\n// EXPORTS //\n\nmodule.exports = reDirnameWindows;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to capture a Windows path dirname.\n*\n* @module @stdlib/regexp/dirname-windows\n*\n* @example\n* var reDirnameWindows = require( '@stdlib/regexp/dirname-windows' );\n*\n* var RE_DIRNAME_WINDOWS = reDirnameWindows();\n* var dir = RE_DIRNAME_WINDOWS.exec( 'foo\\\\bar\\\\index.js' )[ 1 ];\n* // returns 'foo\\\\bar'\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar reDirnameWindows = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( reDirnameWindows, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = reDirnameWindows;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reDirnameWindows = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Regular expression to capture a Windows path dirname. Modified from Node.js [source][1].\n*\n* Regular expression: `/^((?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+|)(?:[\\\\\\/]|)(?:[\\s\\S]*?))(?:[\\\\\\/]+?|)(?:(?:\\.{1,2}|[^\\\\\\/]+?|)(?:\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/`\n*\n* -   `^`\n*     -   match any string which begins with\n*\n* -   `()`\n*     -   capture (includes the device, slash, and dirname)\n*\n* -   `(?:)`\n*     -   capture but do not remember (device)\n*\n* -   `[a-zA-Z]:`\n*     -   match any upper or lowercase letter and a `:` literal\n*\n* -   `|`\n*     -   OR\n*\n* -   `[\\\\\\/]`\n*     -   match a `\\` or `/` literal character\n*\n* -   `{2}`\n*     -   exactly two times\n*\n* -   `[^\\\\\\/]+`\n*     -   match anything but a `\\` or `/` literal one or more times\n*\n* -   `[\\\\\\/]+`\n*     -   match a `\\` or `/` literal one or more times\n*\n* -   `[^\\\\\\/]+`\n*     -   match anything but a `\\` or `/` literal one or more times\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (slash)\n*\n* -   `[\\\\\\/]`\n*     -   match a `\\` or `/` literal\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (dirname)\n*\n* -   `[\\s\\S]`\n*     -   match any space or non-space character\n*\n* -   `*?`\n*     -   zero or more times but do so non-greedily\n*\n* -   `(?:)`\n*     -   capture but do not remember (slash before basename)\n*\n* -   `[\\\\\\/]+?`\n*     -   match a `\\` or `/` literal one or more times, but do so non-greedily\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (basename)\n*\n* -   `(?:)`\n*     -   capture but do not remember\n*\n* -   `\\.{1,2}`\n*     -   match a `.` literal one or two times\n*\n* -   `|`\n*     -   OR\n*\n* -   `[^\\\\\\/]+?`\n*     -   match anything but a `\\` or `/` literal one or more times, but do so non-greedily\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (extname)\n*\n* -   `\\.`\n*     -   match a `.` literal\n*\n* -   `[^.\\/\\\\]*`\n*     -   match anything but a `.`, `/`, or `\\` literal zero or more times\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (trailing slash)\n*\n* -   `[\\\\\\/]*`\n*     -   match a `\\` or `/` literal zero or more times\n*\n* -   `$`\n*     -   end of string\n*\n* [1]: https://github.com/nodejs/node/blob/1a3b295d0f46b2189bd853800b1e63ab4d106b66/lib/path.js#L65\n*\n* @constant\n* @type {RegExp}\n* @default /^((?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+|)(?:[\\\\\\/]|)(?:[\\s\\S]*?))(?:[\\\\\\/]+?|)(?:(?:\\.{1,2}|[^\\\\\\/]+?|)(?:\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/\n*/\nvar RE_DIRNAME_WINDOWS = reDirnameWindows();\n\n\n// EXPORTS //\n\nmodule.exports = RE_DIRNAME_WINDOWS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar contains = require( '@stdlib/assert/contains' );\nvar format = require( '@stdlib/string/format' );\nvar posix = require( './../../dirname-posix' );\nvar win32 = require( './../../dirname-windows' );\nvar IS_WINDOWS = require( '@stdlib/assert/is-windows' );\n\n\n// VARIABLES //\n\nvar PLATFORMS = [ 'posix', 'win32' ];\n\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture a path dirname.\n*\n* @param {string} [platform] - path platform (`win32` or `posix`)\n* @throws {Error} platform must be `win32` or `posix`\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE = reDirname();\n* var dir = RE.exec( '/foo/bar/index.js' )[ 1 ];\n* // returns <string>\n*/\nfunction reDirname( platform ) {\n\tif ( arguments.length > 0 ) {\n\t\tif ( !contains( PLATFORMS, platform ) ) {\n\t\t\tthrow new Error( format( 'invalid argument.  Must be one of the following: \"%s\". Value: `%s`.', PLATFORMS.join( '\", \"' ), platform ) );\n\t\t}\n\t}\n\tif ( platform === 'win32' || IS_WINDOWS ) {\n\t\treturn win32();\n\t}\n\t// Case: platform === 'posix'\n\treturn posix();\n}\n\n\n// EXPORTS //\n\nmodule.exports = reDirname;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to capture a path dirname.\n*\n* @module @stdlib/regexp/dirname\n*\n* @example\n* var reDirname = require( '@stdlib/regexp/dirname' );\n* var RE_DIRNAME = reDirname();\n*\n* // On a POSIX platform...\n* var dir = RE_DIRNAME.exec( '/foo/bar/index.js' )[ 1 ];\n* // returns '/foo/bar'\n*\n* @example\n* var reDirname = require( '@stdlib/regexp/dirname' );\n* var RE_DIRNAME = reDirname();\n*\n* // On a Windows platform...\n* var dir = RE_DIRNAME.exec( 'C:\\\\foo\\\\bar\\\\index.js' )[ 1 ];\n* // returns 'C:\\\\foo\\\\bar'\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar posix = require( './../../dirname-posix' ).REGEXP;\nvar win32 = require( './../../dirname-windows' ).REGEXP;\nvar IS_WINDOWS = require( '@stdlib/assert/is-windows' );\nvar reDirname = require( './main.js' );\n\n\n// MAIN //\n\nsetReadOnly( reDirname, 'REGEXP', ( IS_WINDOWS ) ? win32 : posix );\nsetReadOnly( reDirname, 'REGEXP_POSIX', posix );\nsetReadOnly( reDirname, 'REGEXP_WIN32', win32 );\n\n\n// EXPORTS //\n\nmodule.exports = reDirname;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {string} [options.flags] - regular expression flags\n* @param {boolean} [options.capture] - boolean indicating whether to wrap a regular expression matching a decimal number with a capture group\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'flags': 'gm'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'flags' ) ) {\n\t\topts.flags = options.flags;\n\t\tif ( !isString( opts.flags ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'flags', opts.flags ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'capture' ) ) {\n\t\topts.capture = options.capture;\n\t\tif ( !isBoolean( opts.capture ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'capture', opts.capture ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar validate = require( './validate.js' );\n\n\n// VARIABLES //\n\nvar REGEXP_STRING = '\\\\r?\\\\n';\n\n\n// MAIN //\n\n/**\n* Returns a regular expression to match a newline character sequence.\n*\n* @param {Options} [options] - function options\n* @param {string} [options.flags=''] - regular expression flags\n* @param {boolean} [options.capture=false] - boolean indicating whether to create a capture group for the match\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_EOL = reEOL();\n* var bool = RE_EOL.test( '\\r\\n' );\n* // returns true\n*\n* @example\n* var replace = require( '@stdlib/string/replace' );\n*\n* var RE_EOL = reEOL({\n*     'flags': 'g'\n* });\n* var str = '1\\n2\\n3';\n* var out = replace( str, RE_EOL, '' );\n*/\nfunction reEOL( options ) {\n\tvar opts;\n\tvar err;\n\tif ( arguments.length > 0 ) {\n\t\topts = {};\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tif ( opts.capture ) {\n\t\t\treturn new RegExp( '('+REGEXP_STRING+')', opts.flags );\n\t\t}\n\t\treturn new RegExp( REGEXP_STRING, opts.flags );\n\t}\n\treturn /\\r?\\n/;\n}\n\n\n// EXPORTS //\n\nmodule.exports = reEOL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to match a newline character sequence.\n*\n* @module @stdlib/regexp/eol\n*\n* @example\n* var reEOL = require( '@stdlib/regexp/eol' );\n* var RE_EOL = reEOL();\n*\n* var bool = RE_EOL.test( '\\n' );\n* // returns true\n*\n* bool = RE_EOL.test( '\\\\r\\\\n' );\n* // returns false\n*\n* @example\n* var reEOL = require( '@stdlib/regexp/eol' );\n* var replace = require( '@stdlib/string/replace' );\n*\n* var RE_EOL = reEOL({\n*     'flags': 'g'\n* });\n* var str = '1\\n2\\n3';\n* var out = replace( str, RE_EOL, '' );\n*\n* @example\n* var reEOL = require( '@stdlib/regexp/eol' );\n* var bool = reEOL.REGEXP.test( '\\r\\n' );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar reEOL = require( './main.js' );\nvar REGEXP_CAPTURE = require( './regexp_capture.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( reEOL, 'REGEXP', REGEXP );\nsetReadOnly( reEOL, 'REGEXP_CAPTURE', REGEXP_CAPTURE );\n\n\n// EXPORTS //\n\nmodule.exports = reEOL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reEOL = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Captures a newline character sequence.\n*\n* Regular expression: `/\\r?\\n/`\n*\n* -   `()`\n*     -   capture\n*\n* -   `\\r?`\n*     -   match a carriage return character (optional)\n*\n* -   `\\n`\n*     -   match a line feed character\n*\n* @constant\n* @type {RegExp}\n* @default /(\\r?\\n)/\n*/\nvar REGEXP_CAPTURE = reEOL({\n\t'capture': true\n});\n\n\n// EXPORTS //\n\nmodule.exports = REGEXP_CAPTURE;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reEOL = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Matches a newline character sequence.\n*\n* Regular expression: `/\\r?\\n/`\n*\n* -   `\\r?`\n*     -   match a carriage return character (optional)\n*\n* -   `\\n`\n*     -   match a line feed character\n*\n* @constant\n* @type {RegExp}\n* @default /\\r?\\n/\n*/\nvar REGEXP = reEOL();\n\n\n// EXPORTS //\n\nmodule.exports = REGEXP;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression that matches an extended-length path.\n*\n* @returns {RegExp} regular expression\n*/\nfunction reExtendedLengthPath() {\n\treturn /^\\\\\\\\\\?\\\\.+/;\n}\n\n\n// EXPORTS //\n\nmodule.exports = reExtendedLengthPath;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to test if a string is an extended-length path.\n*\n* @module @stdlib/regexp/extended-length-path\n*\n* @example\n* var reExtendedLengthPath = require( '@stdlib/regexp/extended-length-path' );\n* var RE_EXTENDED_LENGTH_PATH = reExtendedLengthPath();\n*\n* var bool = RE_EXTENDED_LENGTH_PATH.test( '\\\\\\\\?\\\\C:\\\\foo\\\\bar' );\n* // returns true\n*\n* bool = RE_EXTENDED_LENGTH_PATH.test( 'C:\\\\foo\\\\bar' );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar reExtendedLengthPath = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( reExtendedLengthPath, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = reExtendedLengthPath;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reExtendedLengthPath = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Matches an extended-length path.\n*\n* Regular Expression: `/^\\\\\\\\\\?\\\\.+/`\n*\n* -   `/^\\\\\\\\?\\\\`\n*     -   match a string that begins with two backward slashes `\\\\\\\\` followed by a `?` and then a backward slash `\\\\`\n*\n* -   `.+`\n*     -   match any character which occurs one or more times\n*\n* @constant\n* @type {RegExp}\n* @default /^\\\\\\\\\\?\\\\.+/\n* @see [MSDN]{@link https://msdn.microsoft.com/en-us/library/windows/desktop/aa365247(v=vs.85).aspx}\n*/\nvar REGEXP = reExtendedLengthPath();\n\n\n// EXPORTS //\n\nmodule.exports = REGEXP;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture a POSIX filename extension.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_EXTNAME_POSIX = reExtnamePosix();\n* var ext = RE_EXTNAME_POSIX.exec( 'index.js' )[ 1 ];\n* // returns '.js'\n*/\nfunction reExtnamePosix() {\n\treturn /^(?:\\/?|)(?:[\\s\\S]*?)(?:(?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/; // eslint-disable-line no-useless-escape\n}\n\n\n// EXPORTS //\n\nmodule.exports = reExtnamePosix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to capture a POSIX filename extension.\n*\n* @module @stdlib/regexp/extname-posix\n*\n* @example\n* var reExtnamePosix = require( '@stdlib/regexp/extname-posix' );\n*\n* var RE_EXTNAME_POSIX = reExtnamePosix();\n* var ext = RE_EXTNAME_POSIX.exec( 'index.js' )[ 1 ];\n* // returns '.js'\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar reExtnamePosix = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( reExtnamePosix, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = reExtnamePosix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reExtnamePosix = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Captures a POSIX filename extension.  Modified from Node.js [source][1].\n*\n* Regular expression: `/^(?:\\/?|)(?:[\\s\\S]*?)(?:(?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/`\n*\n* -   `\\^`\n*     -   match any string which begins with\n*\n* -   `(?:)`\n*     -   capture but do not remember (root)\n*\n* -   `\\/?`\n*     -   match a `/` literal zero or one time\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (directory)\n*\n* -   `[\\s\\S]`\n*     -   any space or non-space character\n*\n* -   `*?`\n*     -   zero or more times, but non-greedily (shortest possible match)\n*\n* -   `(?:)`\n*     -   capture but do not remember (basename)\n*\n* -   `\\.{1,2}`\n*     -   match a `.` literal one or two times\n*\n* -   `|`\n*     -   OR\n*\n* -   `[^\\/]+?`\n*     -   match anything which is not a `/` literal one or more times, but do so non-greedily\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `()`\n*     -   capture\n*\n* -   `\\.`\n*     -   match a `.` literal\n*\n* -   `[^.\\/]`\n*     -   match anything which is not a `.` or `/` literal\n*\n* -   `*`\n*     -   zero or more times\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (trailing slash)\n*\n* -   `[\\/]`\n*     -   match a `/` literal\n*\n* -   `*`\n*     -   zero or more times\n*\n* -   `$`\n*     -   end of string\n*\n* [1]: https://github.com/nodejs/node/blob/1a3b295d0f46b2189bd853800b1e63ab4d106b66/lib/path.js#L406\n*\n* @constant\n* @type {RegExp}\n* @default /^(?:\\/?|)(?:[\\s\\S]*?)(?:(?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/\n*/\nvar RE_EXTNAME_POSIX = reExtnamePosix();\n\n\n// EXPORTS //\n\nmodule.exports = RE_EXTNAME_POSIX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture a Windows filename extension.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_EXTNAME_WINDOWS = reExtnameWindows();\n* var ext = RE_EXTNAME_WINDOWS.exec( 'index.js' )[ 1 ];\n* // returns '.js'\n*/\nfunction reExtnameWindows() {\n\treturn /^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+|)(?:[\\\\\\/]|)(?:[\\s\\S]*?)(?:(?:\\.{1,2}|[^\\\\\\/]+?|)(\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/; // eslint-disable-line no-useless-escape\n}\n\n\n// EXPORTS //\n\nmodule.exports = reExtnameWindows;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to capture a Windows filename extension.\n*\n* @module @stdlib/regexp/extname-windows\n*\n* @example\n* var reExtnameWindows = require( '@stdlib/regexp/extname-windows' );\n*\n* var RE_EXTNAME_WINDOWS = reExtnameWindows();\n* var ext = RE_EXTNAME_WINDOWS.exec( 'index.js' )[ 1 ];\n* // returns '.js'\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar reExtnameWindows = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( reExtnameWindows, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = reExtnameWindows;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reExtnameWindows = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Captures a Windows filename extension. Modified from Node.js [source][1].\n*\n* -   `^`\n*     -   match any string which begins with\n*\n* -   `(?:)`\n*     -   capture but do not remember (device)\n*\n* -   `[a-zA-Z]:`\n*     -   match any upper or lowercase letter and a `:` literal\n*\n* -   `|`\n*     -   OR\n*\n* -   `[\\\\\\/]`\n*     -   match a `\\` or `/` literal character\n*\n* -   `{2}`\n*     -   exactly two times\n*\n* -   `[^\\\\\\/]+`\n*     -   match anything but a `\\` or `/` literal one or more times\n*\n* -   `[\\\\\\/]+`\n*     -   match a `\\` or `/` literal one or more times\n*\n* -   `[^\\\\\\/]+`\n*     -   match anything but a `\\` or `/` literal one or more times\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (slash)\n*\n* -   `[\\\\\\/]`\n*     -   match a `\\` or `/` literal\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (dirname)\n*\n* -   `[\\s\\S]`\n*     -   match any space or non-space character\n*\n* -   `*?`\n*     -   zero or more times but do so non-greedily\n*\n* -   `(?:)`\n*     -   capture but do not remember (basename)\n*\n* -   `(?:)`\n*     -   capture but do not remember\n*\n* -   `\\.{1,2}`\n*     -   match a `.` literal one or two times\n*\n* -   `|`\n*     -   OR\n*\n* -   `[^\\\\\\/]+?`\n*     -   match anything but a `\\` or `/` literal one or more times, but do so non-greedily\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `()`\n*     -   capture (extname)\n*\n* -   `\\.`\n*     -   match a `.` literal\n*\n* -   `[^.\\/\\\\]*`\n*     -   match anything but a `.`, `/`, or `\\` literal zero or more times\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (trailing slash)\n*\n* -   `[\\\\\\/]*`\n*     -   match a `\\` or `/` literal zero or more times\n*\n* -   `$`\n*     -   end of string\n*\n* [1]: https://github.com/nodejs/node/blob/1a3b295d0f46b2189bd853800b1e63ab4d106b66/lib/path.js#L65\n*\n* @constant\n* @type {RegExp}\n* @default /^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+|)(?:[\\\\\\/]|)(?:[\\s\\S]*?)(?:(?:\\.{1,2}|[^\\\\\\/]+?|)(\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/\n*/\nvar RE_EXTNAME_WINDOWS = reExtnameWindows();\n\n\n// EXPORTS //\n\nmodule.exports = RE_EXTNAME_WINDOWS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar contains = require( '@stdlib/assert/contains' );\nvar format = require( '@stdlib/string/format' );\nvar posix = require( './../../extname-posix' );\nvar win32 = require( './../../extname-windows' );\nvar IS_WINDOWS = require( '@stdlib/assert/is-windows' );\n\n\n// VARIABLES //\n\nvar PLATFORMS = [ 'posix', 'win32' ];\n\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture a filename extension.\n*\n* @param {string} [platform] - path platform (`win32` or `posix`)\n* @throws {Error} platform must be `win32` or `posix`\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE = reExtname();\n* var base = RE.exec( '/foo/bar/index.js' )[ 1 ];\n* // returns '.js'\n*/\nfunction reExtname( platform ) {\n\tif ( arguments.length > 0 ) {\n\t\tif ( !contains( PLATFORMS, platform ) ) {\n\t\t\tthrow new Error( format( 'invalid argument. Must be one of the following: \"%s\". Value: `%s`.', PLATFORMS.join( '\", \"' ), platform ) );\n\t\t}\n\t}\n\tif ( platform === 'win32' || IS_WINDOWS ) {\n\t\treturn win32();\n\t}\n\t// Case: platform === 'posix'\n\treturn posix();\n}\n\n\n// EXPORTS //\n\nmodule.exports = reExtname;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to capture a filename extension.\n*\n* @module @stdlib/regexp/extname\n*\n* @example\n* var reExtname = require( '@stdlib/regexp/extname' );\n* var RE_EXTNAME = reExtname();\n*\n* // On a POSIX platform...\n* var ext = RE_EXTNAME.exec( '/foo/bar/index.js' )[ 1 ];\n* // returns '.js'\n*\n* @example\n* var reExtname = require( '@stdlib/regexp/extname' );\n* var RE_EXTNAME = reExtname();\n*\n* // On a Windows platform...\n* var ext = RE_EXTNAME.exec( 'C:\\\\foo\\\\bar\\\\index.js' )[ 1 ];\n* // returns '.js'\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar posix = require( './../../extname-posix' ).REGEXP;\nvar win32 = require( './../../extname-windows' ).REGEXP;\nvar IS_WINDOWS = require( '@stdlib/assert/is-windows' );\nvar reExtname = require( './main.js' );\n\n\n// MAIN //\n\nsetReadOnly( reExtname, 'REGEXP', ( IS_WINDOWS ) ? win32 : posix );\nsetReadOnly( reExtname, 'REGEXP_POSIX', posix );\nsetReadOnly( reExtname, 'REGEXP_WIN32', win32 );\n\n\n// EXPORTS //\n\nmodule.exports = reExtname;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to split a POSIX filename.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_FILENAME_POSIX = reFilenamePosix();\n* var parts = RE_FILENAME_POSIX.exec( '/foo/bar/index.js' ).slice();\n* // returns [ '/foo/bar/index.js', '/', 'foo/bar/', 'index.js', '.js' ]\n*/\nfunction reFilenamePosix() {\n\treturn /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/; // eslint-disable-line no-useless-escape\n}\n\n\n// EXPORTS //\n\nmodule.exports = reFilenamePosix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to split a POSIX filename.\n*\n* @module @stdlib/regexp/filename-posix\n*\n* @example\n* var reFilenamePosix = require( '@stdlib/regexp/filename-posix' );\n*\n* var RE_FILENAME_POSIX = reFilenamePosix();\n* var parts = RE_FILENAME_POSIX.exec( '/foo/bar/index.js' ).slice();\n* // returns [ '/foo/bar/index.js', '/', 'foo/bar/', 'index.js', '.js' ]\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar reFilenamePosix = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( reFilenamePosix, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = reFilenamePosix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reFilenamePosix = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Splits a POSIX filename. Extracted from Node.js [source][1].\n*\n* Regular expression: `/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/`\n*\n* -   `\\^`\n*     -   match any string which begins with\n*\n* -   `()`\n*     -   capture (root)\n*\n* -   `\\/?`\n*     -   match a `/` literal zero or one time\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `()`\n*     -   capture (directory)\n*\n* -   `[\\s\\S]`\n*     -   any space or non-space character\n*\n* -   `*?`\n*     -   zero or more times, but non-greedily (shortest possible match)\n*\n* -   `()`\n*     -   capture (basename)\n*\n* -   `\\.{1,2}`\n*     -   match a `.` literal one or two times\n*\n* -   `|`\n*     -   OR\n*\n* -   `[^\\/]+?`\n*     -   match anything which is not a `/` literal one or more times, but do so non-greedily\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `()`\n*     -   capture\n*\n* -   `\\.`\n*     -   match a `.` literal\n*\n* -   `[^.\\/]`\n*     -   match anything which is not a `.` or `/` literal\n*\n* -   `*`\n*     -   zero or more times\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (trailing slash)\n*\n* -   `[\\/]`\n*     -   match a `/` literal\n*\n* -   `*`\n*     -   zero or more times\n*\n* -   `$`\n*     -   end of string\n*\n* [1]: https://github.com/nodejs/node/blob/1a3b295d0f46b2189bd853800b1e63ab4d106b66/lib/path.js#L406\n*\n* @constant\n* @type {RegExp}\n* @default /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/\n*/\nvar RE_FILENAME_POSIX = reFilenamePosix();\n\n\n// EXPORTS //\n\nmodule.exports = RE_FILENAME_POSIX;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to split a Windows filename.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_FILENAME_WINDOWS = reFilenameWindows();\n* var parts = RE_FILENAME_WINDOWS.exec( 'C:\\\\foo\\\\bar\\\\index.js' ).slice();\n* // returns [ 'C:\\\\foo\\\\bar\\\\index.js', 'C:', '\\\\', 'foo\\\\bar\\\\', 'index.js', '.js' ]\n*/\nfunction reFilenameWindows() {\n\treturn /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+|)([\\\\\\/]|)([\\s\\S]*?)((?:\\.{1,2}|[^\\\\\\/]+?|)(\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/; // eslint-disable-line no-useless-escape\n}\n\n\n// EXPORTS //\n\nmodule.exports = reFilenameWindows;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to split a Windows filename.\n*\n* @module @stdlib/regexp/filename-windows\n*\n* @example\n* var reFilenameWindows = require( '@stdlib/regexp/filename-windows' );\n*\n* var RE_FILENAME_WINDOWS = reFilenameWindows();\n* var parts = RE_FILENAME_WINDOWS.exec( 'C:\\\\foo\\\\bar\\\\index.js' ).slice();\n* // returns [ 'C:\\\\foo\\\\bar\\\\index.js', 'C:', '\\\\', 'foo\\\\bar\\\\', 'index.js', '.js' ]\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar reFilenameWindows = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( reFilenameWindows, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = reFilenameWindows;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reFilenameWindows = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Splits a Windows filename. Modified from Node.js [source][1].\n*\n* Regular expression: `/^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+|)([\\\\\\/]|)([\\s\\S]*?)((?:\\.{1,2}|[^\\\\\\/]+?|)(\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/`\n*\n* -   `^`\n*     -   match any string which begins with\n*\n* -   `()`\n*     -   capture (device)\n*\n* -   `[a-zA-Z]:`\n*     -   match any upper or lowercase letter and a `:` literal\n*\n* -   `|`\n*     -   OR\n*\n* -   `[\\\\\\/]`\n*     -   match a `\\` or `/` literal character\n*\n* -   `{2}`\n*     -   exactly two times\n*\n* -   `[^\\\\\\/]+`\n*     -   match anything but a `\\` or `/` literal one or more times\n*\n* -   `[\\\\\\/]+`\n*     -   match a `\\` or `/` literal one or more times\n*\n* -   `[^\\\\\\/]+`\n*     -   match anything but a `\\` or `/` literal one or more times\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `()`\n*     -   capture (slash)\n*\n* -   `[\\\\\\/]`\n*     -   match a `\\` or `/` literal\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `()`\n*     -   capture (dirname)\n*\n* -   `[\\s\\S]`\n*     -   match any space or non-space character\n*\n* -   `*?`\n*     -   zero or more times but do so non-greedily\n*\n* -   `()`\n*     -   capture (basename)\n*\n* -   `(?:)`\n*     -   capture but do not remember\n*\n* -   `\\.{1,2}`\n*     -   match a `.` literal one or two times\n*\n* -   `|`\n*     -   OR\n*\n* -   `[^\\\\\\/]+?`\n*     -   match anything but a `\\` or `/` literal one or more times, but do so non-greedily\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `()`\n*     -   capture (extname)\n*\n* -   `\\.`\n*     -   match a `.` literal\n*\n* -   `[^.\\/\\\\]*`\n*     -   match anything but a `.`, `/`, or `\\` literal zero or more times\n*\n* -   `|)`\n*     -   OR capture nothing\n*\n* -   `(?:)`\n*     -   capture but do not remember (trailing slash)\n*\n* -   `[\\\\\\/]*`\n*     -   match a `\\` or `/` literal zero or more times\n*\n* -   `$`\n*     -   end of string\n*\n* [1]: https://github.com/nodejs/node/blob/1a3b295d0f46b2189bd853800b1e63ab4d106b66/lib/path.js#L65\n*\n* @constant\n* @type {RegExp}\n* @default /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+|)([\\\\\\/]|)([\\s\\S]*?)((?:\\.{1,2}|[^\\\\\\/]+?|)(\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/\n*/\nvar RE_FILENAME_WINDOWS = reFilenameWindows();\n\n\n// EXPORTS //\n\nmodule.exports = RE_FILENAME_WINDOWS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar contains = require( '@stdlib/assert/contains' );\nvar format = require( '@stdlib/string/format' );\nvar posix = require( './../../filename-posix' );\nvar win32 = require( './../../filename-windows' );\nvar IS_WINDOWS = require( '@stdlib/assert/is-windows' );\n\n\n// VARIABLES //\n\nvar PLATFORMS = [ 'posix', 'win32' ];\n\n\n// MAIN //\n\n/**\n* Returns a regular expression to split a filename.\n*\n* @param {string} [platform] - path platform (`win32` or `posix`)\n* @throws {Error} platform must be `win32` or `posix`\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_FILENAME = reFilename( 'posix' );\n* var parts = RE_FILENAME.exec( '/foo/bar/index.js' ).slice();\n* // returns [ '/foo/bar/index.js', '/', 'foo/bar/', 'index.js', '.js' ]\n*/\nfunction reFilename( platform ) {\n\tif ( arguments.length > 0 ) {\n\t\tif ( !contains( PLATFORMS, platform ) ) {\n\t\t\tthrow new Error( format( 'invalid argument. Must be one of the following: \"%s\". Value: `%s`.', PLATFORMS.join( '\", \"' ), platform ) );\n\t\t}\n\t}\n\tif ( platform === 'win32' || IS_WINDOWS ) {\n\t\treturn win32();\n\t}\n\t// Case: platform === 'posix'\n\treturn posix();\n}\n\n\n// EXPORTS //\n\nmodule.exports = reFilename;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to split a filename.\n*\n* @module @stdlib/regexp/filename\n*\n* @example\n* var reFilename = require( '@stdlib/regexp/filename' );\n* var RE_FILENAME = reFilename();\n*\n* // On a POSIX platform...\n* var parts = RE_FILENAME.exec( '/foo/bar/index.js' ).slice();\n* // returns [ '/foo/bar/index.js', '/', 'foo/bar/', 'index.js', '.js' ]\n*\n* @example\n* var reFilename = require( '@stdlib/regexp/filename' );\n* var RE_FILENAME = reFilename();\n*\n* // On a Windows platform...\n* var parts = RE_FILENAME.exec( 'C:\\\\foo\\\\bar\\\\index.js' ).slice();\n* // returns [ 'C:\\\\foo\\\\bar\\\\index.js', 'C:', '\\\\', 'foo\\\\bar\\\\', 'index.js', '.js' ]\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar posix = require( './../../filename-posix' ).REGEXP;\nvar win32 = require( './../../filename-windows' ).REGEXP;\nvar IS_WINDOWS = require( '@stdlib/assert/is-windows' );\nvar reFilename = require( './main.js' );\n\n\n// MAIN //\n\nsetReadOnly( reFilename, 'REGEXP', ( IS_WINDOWS ) ? win32 : posix );\nsetReadOnly( reFilename, 'REGEXP_POSIX', posix );\nsetReadOnly( reFilename, 'REGEXP_WIN32', win32 );\n\n\n// EXPORTS //\n\nmodule.exports = reFilename;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_FUNCTION_NAME = reFunctionName();\n*\n* function fname( fcn ) {\n*     return RE_FUNCTION_NAME.exec( fcn.toString() )[ 1 ];\n* }\n*\n* var fn = fname( Math.sqrt );\n* // returns 'sqrt'\n*\n* fn = fname( Int8Array );\n* // returns 'Int8Array'\n*\n* fn = fname( Object.prototype.toString );\n* // returns 'toString'\n*\n* fn = fname( function(){} );\n* // returns ''\n*/\nfunction reFunctionName() {\n\treturn /^\\s*function\\s*([^(]*)/i;\n}\n\n\n// EXPORTS //\n\nmodule.exports = reFunctionName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* @module @stdlib/regexp/function-name\n*\n* @example\n* var reFunctionName = require( '@stdlib/regexp/function-name' );\n* var RE_FUNCTION_NAME = reFunctionName();\n*\n* function fname( fcn ) {\n*     return RE_FUNCTION_NAME.exec( fcn.toString() )[ 1 ];\n* }\n*\n* var fn = fname( Math.sqrt );\n* // returns 'sqrt'\n*\n* fn = fname( Int8Array );\n* // returns 'Int8Array'\n*\n* fn = fname( Object.prototype.toString );\n* // returns 'toString'\n*\n* fn = fname( function(){} );\n* // returns ''\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar reFunctionName = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( reFunctionName, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = reFunctionName;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reFunctionName = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Captures everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* Regular expression: `/^\\s*function\\s*([^(]*)/i`\n*\n* -   `/^\\s*`\n*     -   Match zero or more spaces at beginning\n*\n* -   `function`\n*     -   Match the word `function`\n*\n* -   `\\s*`\n*     -   Match zero or more spaces after the word `function`\n*\n* -   `()`\n*     -   Capture\n*\n* -   `[^(]*`\n*     -   Match anything except a left parenthesis `(` zero or more times\n*\n* -   `/i`\n*     -   ignore case\n*\n* @constant\n* @type {RegExp}\n* @default /^\\s*function\\s*([^(]*)/i\n*/\nvar RE_FUNCTION_NAME = reFunctionName();\n\n\n// EXPORTS //\n\nmodule.exports = RE_FUNCTION_NAME;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to capture everything that is not a space immediately after the `function` keyword and before the first left parenthesis.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_NATIVE_FUNCTION = reNativeFunction();\n* var bool = RE_NATIVE_FUNCTION.test( Date.toString() );\n* // returns true\n*/\nfunction reNativeFunction() {\n\tvar str = '';\n\n\t// Use a native function as a template:\n\tstr += Function.prototype.toString.call( Function );\n\n\t// Escape special RegExp characters:\n\tstr = str.replace( /([.*+?^=!:$(){}|[\\]\\/\\\\])/g, '\\\\$1' ); // eslint-disable-line no-useless-escape\n\n\t// Replace any mentions of `Function` to make template generic and replace `for ...` and additional info provided in other environments, such as Rhino.\n\tstr = str.replace( /Function|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?' );\n\n\t// Bracket the regular expression:\n\tstr = '^' + str + '$';\n\n\t// Create the regular expression:\n\treturn new RegExp( str );\n}\n\n\n// EXPORTS //\n\nmodule.exports = reNativeFunction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to match a native function.\n*\n* @module @stdlib/regexp/native-function\n*\n* @example\n* var reNativeFunction = require( '@stdlib/regexp/native-function' );\n*\n* var RE_NATIVE_FUNCTION = reNativeFunction();\n* function isNativeFunction( fcn ) {\n*     return RE_NATIVE_FUNCTION.test( fcn.toString() );\n* }\n*\n* var bool = isNativeFunction( Math.sqrt );\n* // returns true\n*\n* bool = isNativeFunction( Int8Array );\n* // returns true\n*\n* bool = isNativeFunction( Object.prototype.toString );\n* // returns true\n*\n* bool = isNativeFunction( function noop() {} );\n* // returns false\n*/\n\n\n// MAIN //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar reNativeFunction = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( reNativeFunction, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = reNativeFunction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reNativeFunction = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Match a native function.\n*\n* @constant\n* @type {RegExp}\n*/\nvar RE_NATIVE_FUNCTION = reNativeFunction();\n\n\n// EXPORTS //\n\nmodule.exports = RE_NATIVE_FUNCTION;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to parse a regular expression string.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_REGEXP = reRegExp();\n*\n* var bool = RE_REGEXP.test( '/^beep$/' );\n* // returns true\n*\n* bool = RE_REGEXP.test( '' );\n* // returns false\n*/\nfunction reRegExp() {\n\treturn /^\\/((?:\\\\\\/|[^\\/])+)\\/([imgy]*)$/; // eslint-disable-line no-useless-escape\n}\n\n\n// EXPORTS //\n\nmodule.exports = reRegExp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to parse a regular expression string.\n*\n* @module @stdlib/regexp/regexp\n*\n* @example\n* var reRegExp = require( '@stdlib/regexp/regexp' );\n*\n* var RE_REGEXP = reRegExp();\n*\n* var bool = RE_REGEXP.test( '/^beep$/' );\n* // returns true\n*\n* bool = RE_REGEXP.test( '' );\n* // returns false\n*\n* @example\n* var reRegExp = require( '@stdlib/regexp/regexp' );\n*\n* var RE_REGEXP = reRegExp();\n*\n* var parts = RE_REGEXP.exec( '/^.*$/ig' );\n* // returns [ '/^.*$/ig', '^.*$', 'ig', 'index': 0, 'input': '/^.*$/ig' ]\n*/\n\n// MAIN //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar reRegExp = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( reRegExp, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = reRegExp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reRegExp = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Matches parts of a regular expression string.\n*\n* Regular expression: `/^\\/((?:\\\\\\/|[^\\/])+)\\/([imgy]*)$/`\n*\n* -   `/^\\/`\n*     -   match a string that begins with a `/`\n*\n* -   `()`\n*     -   capture\n*\n* -   `(?:)+`\n*     -   capture, but do not remember, a group of characters which occur one or more times\n*\n* -   `\\\\\\/`\n*     -   match the literal `\\/`\n*\n* -   `|`\n*     -   OR\n*\n* -   `[^\\/]`\n*     -   anything which is not the literal `\\/`\n*\n* -   `\\/`\n*     -   match the literal `/`\n*\n* -   `([imgy]*)`\n*     -   capture any characters matching `imgy` occurring zero or more times\n*\n* -   `$/`\n*     -   string end\n*\n*\n* @constant\n* @type {RegExp}\n* @default /^\\/((?:\\\\\\/|[^\\/])+)\\/([imgy]*)$/\n*/\nvar RE_REGEXP = reRegExp();\n\n\n// EXPORTS //\n\nmodule.exports = RE_REGEXP;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to parse a UNC path.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_UNC_PATH = reUncPath();\n* var bool = RE_UNC_PATH.test( '\\\\\\\\server\\\\share' );\n* // returns true\n*\n* bool = RE_UNC_PATH.test( 'C:\\\\foo\\\\bar\\\\baz' );\n* // returns false\n*/\nfunction reUncPath() {\n\treturn /^\\\\\\\\([^\\\\:\\|\\[\\]\\/\";<>+=,?* _]+)\\\\([\\u0020-\\u0021\\u0023-\\u0029\\u002D-\\u002E\\u0030-\\u0039\\u0040-\\u005A\\u005E-\\u007B\\u007E-\\u00FF]{1,80})(((?:\\\\[\\u0020-\\u0021\\u0023-\\u0029\\u002D-\\u002E\\u0030-\\u0039\\u0040-\\u005A\\u005E-\\u007B\\u007E-\\u00FF]{1,255})+?|)(?:\\\\((?:[\\u0020-\\u0021\\u0023-\\u0029\\u002B-\\u002E\\u0030-\\u0039\\u003B\\u003D\\u0040-\\u005B\\u005D-\\u007B]{1,255}){1}(?:\\:(?=[\\u0001-\\u002E\\u0030-\\u0039\\u003B-\\u005B\\u005D-\\u00FF]|\\:)(?:([\\u0001-\\u002E\\u0030-\\u0039\\u003B-\\u005B\\u005D-\\u00FF]+(?!\\:)|[\\u0001-\\u002E\\u0030-\\u0039\\u003B-\\u005B\\u005D-\\u00FF]*)(?:\\:([\\u0001-\\u002E\\u0030-\\u0039\\u003B-\\u005B\\u005D-\\u00FF]+)|))|)))|)$/; // eslint-disable-line no-useless-escape, no-control-regex\n}\n\n\n// EXPORTS //\n\nmodule.exports = reUncPath;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to parse a UNC path.\n*\n* @module @stdlib/regexp/unc-path\n*\n* @example\n* var reUncPath = require( '@stdlib/regexp/unc-path' );\n*\n* var RE_UNC_PATH = reUncPath();\n* var bool = RE_UNC_PATH.test( '\\\\\\\\server\\\\share' );\n* // returns true\n*\n* bool = RE_UNC_PATH.test( 'C:\\\\foo\\\\bar\\\\baz' );\n* // returns false\n*\n* @example\n* var reUncPath = require( '@stdlib/regexp/unc-path' );\n*\n* var parts = reUncPath.REGEXP.exec( '\\\\\\\\server\\\\share\\\\foo\\\\bar\\\\baz' )[ 1 ];\n* // returns 'server'\n*/\n\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar reUncPath = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( reUncPath, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = reUncPath;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reUncPath = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Matches parts of a UNC path.\n*\n* Regular Expression: `/^\\\\\\\\([^\\\\:\\|\\[\\]\\/\";<>+=,?* _]+)\\\\([\\u0020-\\u0021\\u0023-\\u0029\\u002D-\\u002E\\u0030-\\u0039\\u0040-\\u005A\\u005E-\\u007B\\u007E-\\u00FF]{1,80})(((?:\\\\[\\u0020-\\u0021\\u0023-\\u0029\\u002D-\\u002E\\u0030-\\u0039\\u0040-\\u005A\\u005E-\\u007B\\u007E-\\u00FF]{1,255})+?|)(?:\\\\((?:[\\u0020-\\u0021\\u0023-\\u0029\\u002B-\\u002E\\u0030-\\u0039\\u003B\\u003D\\u0040-\\u005B\\u005D-\\u007B]{1,255}){1}(?:\\:(?=[\\u0001-\\u002E\\u0030-\\u0039\\u003B-\\u005B\\u005D-\\u00FF]|\\:)(?:([\\u0001-\\u002E\\u0030-\\u0039\\u003B-\\u005B\\u005D-\\u00FF]+(?!\\:)|[\\u0001-\\u002E\\u0030-\\u0039\\u003B-\\u005B\\u005D-\\u00FF]*)(?:\\:([\\u0001-\\u002E\\u0030-\\u0039\\u003B-\\u005B\\u005D-\\u00FF]+)|))|)))|)$/`\n*\n* -   `/^\\\\\\\\`\n*     -   match a string that begins with two backward slashes `\\\\\\\\`\n*\n* -   `()`\n*     -   capture (1) (host name)\n*\n* -   `[^\\\\:\\|\\[\\]\\/\";<>+=,?* _]+`\n*     -   match any sequence of characters, excluding `\\\\:\\|\\[\\]\\/\";<>+=,?* _`, one or more times\n*\n* -   `\\\\`\n*     -   match a literal backward slash `\\\\`\n*\n* -   `()`\n*     -   capture (2) (share name)\n*\n* -   `[\\u0020-\\u0021\\u0023-\\u0029\\u002D-\\u002E\\u0030-\\u0039\\u0040-\\u005A\\u005E-\\u007B\\u007E-\\u00FF]{1,80}`\n*     -   match any sequence of 1 to 80 characters matching `` !#$%'()\\-\\.0-9@A-Z^_`a-z{}~`` and Latin-1 Unicode supplement\n*\n* -   `(`\n*     -   begin capture (3) (object name)\n*\n* -   `(`\n*     -   begin capture (4) (path name)\n*\n* -   `(?:\\\\[\\u0020-\\u0021\\u0023-\\u0029\\u002D-\\u002E\\u0030-\\u0039\\u0040-\\u005A\\u005E-\\u007B\\u007E-\\u00FF]{1,255})+?`\n*     -   capture but do not remember a `\\\\` literal followed by one or more sequences of 1 to 255 characters matching `` !#$%'()\\-\\.0-9@A-Z^_`a-z{}~`` and Latin-1 Unicode supplement and do so non-greedily (5)\n*\n* -   `|)`\n*     -   OR capture nothing (4) (path name)\n*\n* -   `(?:`\n*     -   begin capture but do not remember (6)\n*\n* -   `\\\\`\n*     -   match a `\\\\` literal\n*\n* -   `(`\n*     -   begin capture (7) (file name)\n*\n* -   `(?:[0-9a-z]{1,255}){1}`\n*     -   capture but do not remember a sequence of 1 to 255 characters matching `` !#$%'()\\+,\\-\\.0-9;=@A-Z\\[\\]^_`a-z{`` (8)\n*\n* -   `(?:`\n*     -   begin capture but do not remember (9)\n*\n* -   `\\:(?=[\\u0001-\\u002E\\u0030-\\u0039\\u003B-\\u005B\\u005D-\\u00FF]|\\:)`\n*     -   match a literal `:` only if followed by `\\u0001-\\u002E\\u0030-\\u0039\\u003B-\\u005B\\u005D-\\u00FF` OR a literal `:`\n*\n* -   `(?:`\n*     -   begin capture but do not remember (10)\n*\n* -   `([\\u0001-\\u002E\\u0030-\\u0039\\u003B-\\u005B\\u005D-\\u00FF]+(?!\\:)|[\\u0001-\\u002E\\u0030-\\u0039\\u003B-\\u005B\\u005D-\\u00FF]*)`\n*     -   capture a sequence of one or more characters not followed by a literal `:`; otherwise, capture a sequence of 0 or more characters (11) (stream name)\n*\n* -   `(?:`\n*     -   begin capture but do not remember (12)\n*\n* -   `\\:`\n*     -   match a literal `:`\n*\n* -   `([\\u0001-\\u002E\\u0030-\\u0039\\u003B-\\u005B\\u005D-\\u00FF]+)`\n*     -   capture a sequence of one or more characters (13) (stream type)\n*\n* -   `|)`\n*     -   OR capture nothing (12)\n*\n* -   `)`\n*     -   end capture (10)\n*\n* -   `|)`\n*     -   OR capture nothing (9)\n*\n* -   `)`\n*     -   end capture (7) (file name)\n*\n* -   `)`\n*     -   end capture (6)\n*\n* -   `|)`\n*     -   OR capture nothing (3) (object name)\n*\n* -   `$/`\n*     -   end of string\n*\n*\n* @constant\n* @type {RegExp}\n* @default /^\\\\\\\\([^\\\\:\\|\\[\\]\\/\";<>+=,?* _]+)\\\\([\\u0020-\\u0021\\u0023-\\u0029\\u002D-\\u002E\\u0030-\\u0039\\u0040-\\u005A\\u005E-\\u007B\\u007E-\\u00FF]{1,80})(((?:\\\\[\\u0020-\\u0021\\u0023-\\u0029\\u002D-\\u002E\\u0030-\\u0039\\u0040-\\u005A\\u005E-\\u007B\\u007E-\\u00FF]{1,255})+?|)(?:\\\\((?:[\\u0020-\\u0021\\u0023-\\u0029\\u002B-\\u002E\\u0030-\\u0039\\u003B\\u003D\\u0040-\\u005B\\u005D-\\u007B]{1,255}){1}(?:\\:(?=[\\u0001-\\u002E\\u0030-\\u0039\\u003B-\\u005B\\u005D-\\u00FF]|\\:)(?:([\\u0001-\\u002E\\u0030-\\u0039\\u003B-\\u005B\\u005D-\\u00FF]+(?!\\:)|[\\u0001-\\u002E\\u0030-\\u0039\\u003B-\\u005B\\u005D-\\u00FF]*)(?:\\:([\\u0001-\\u002E\\u0030-\\u0039\\u003B-\\u005B\\u005D-\\u00FF]+)|))|)))|)$/\n* @see [MSDN]{@link https://msdn.microsoft.com/en-us/library/gg465305.aspx}\n*/\nvar RE_UNC_PATH = reUncPath();\n\n\n// EXPORTS //\n\nmodule.exports = RE_UNC_PATH;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to match a UTF-16 surrogate pair.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_UTF16_SURROGATE_PAIR = reUtf16SurrogatePair();\n*\n* var bool = RE_UTF16_SURROGATE_PAIR.test( '\\uD800\\uDC00' );\n* // returns true\n*\n* bool = RE_UTF16_SURROGATE_PAIR.test( 'abc\\uD800\\uDC00def' );\n* // returns true\n*\n* bool = RE_UTF16_SURROGATE_PAIR.test( 'abc' );\n* // returns false\n*/\nfunction reUtf16SurrogatePair() {\n\treturn /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/;\n}\n\n\n// EXPORTS //\n\nmodule.exports = reUtf16SurrogatePair;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to match a UTF-16 surrogate pair.\n*\n* @module @stdlib/regexp/utf16-surrogate-pair\n*\n* @example\n* var reUtf16SurrogatePair = require( '@stdlib/regexp/utf16-surrogate-pair' );\n*\n* var RE_UTF16_SURROGATE_PAIR = reUtf16SurrogatePair();\n*\n* var bool = RE_UTF16_SURROGATE_PAIR.test( '\\uD800\\uDC00' );\n* // returns true\n*\n* bool = RE_UTF16_SURROGATE_PAIR.test( 'abc\\uD800\\uDC00def' );\n* // returns true\n*\n* bool = RE_UTF16_SURROGATE_PAIR.test( 'abc' );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar reUtf16SurrogatePair = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( reUtf16SurrogatePair, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = reUtf16SurrogatePair;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reUtf16SurrogatePair = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Matches a UTF-16 surrogate pair.\n*\n* Regular expression: `/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/`\n*\n* -   `[\\uD800-\\uDBFF]`\n*     -   match a high surrogate\n*\n* -   `[\\uDC00-\\uDFFF]`\n*     -   match a low surrogate\n*\n*\n* @constant\n* @type {RegExp}\n* @default /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/\n*/\nvar RE_UTF16_SURROGATE_PAIR = reUtf16SurrogatePair();\n\n\n// EXPORTS //\n\nmodule.exports = RE_UTF16_SURROGATE_PAIR;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a regular expression to match a UTF-16 unpaired surrogate.\n*\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_UTF16_UNPAIRED_SURROGATE = reUtf16UnpairedSurrogate();\n*\n* var bool = RE_UTF16_UNPAIRED_SURROGATE.test( '\\uD800' );\n* // returns true\n*\n* bool = RE_UTF16_UNPAIRED_SURROGATE.test( '\\uDC00' );\n* // returns true\n*\n* bool = RE_UTF16_UNPAIRED_SURROGATE.test( 'abc' );\n* // returns false\n*/\nfunction reUtf16UnpairedSurrogate() {\n\treturn /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/;\n}\n\n\n// EXPORTS //\n\nmodule.exports = reUtf16UnpairedSurrogate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to match a UTF-16 unpaired surrogate.\n*\n* @module @stdlib/regexp/utf16-unpaired-surrogate\n*\n* @example\n* var reUtf16UnpairedSurrogate = require( '@stdlib/regexp/utf16-unpaired-surrogate' );\n*\n* var RE_UTF16_UNPAIRED_SURROGATE = reUtf16UnpairedSurrogate();\n*\n* var bool = RE_UTF16_UNPAIRED_SURROGATE.test( '\\uD800' );\n* // returns true\n*\n* bool = RE_UTF16_UNPAIRED_SURROGATE.test( '\\uDC00' );\n* // returns true\n*\n* bool = RE_UTF16_UNPAIRED_SURROGATE.test( 'abc' );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar reUtf16UnpairedSurrogate = require( './main.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( reUtf16UnpairedSurrogate, 'REGEXP', REGEXP );\n\n\n// EXPORTS //\n\nmodule.exports = reUtf16UnpairedSurrogate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reUtf16UnpairedSurrogate = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Matches an unpaired UTF-16 surrogate.\n*\n* Regular expression: `/(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/`\n*\n* -   `(?:[^\\uD800-\\uDBFF]|^)`\n*     -   capture but do not remember anything which is not a high surrogate, including nothing\n*\n* -   `[\\uDC00-\\uDFFF]`\n*     -   match a low surrogate\n*\n* -   `|`\n*     -   OR\n*\n* -   `[\\uD800-\\uDBFF]`\n*     -   match a high surrogate\n*\n* -   `(?![\\uDC00-\\uDFFF])`\n*     -   but only accept the previous match if not followed by a low surrogate\n*\n*\n* @constant\n* @type {RegExp}\n* @default /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/\n*/\nvar RE_UTF16_UNPAIRED_SURROGATE = reUtf16UnpairedSurrogate(); // eslint-disable-line id-length\n\n\n// EXPORTS //\n\nmodule.exports = RE_UTF16_UNPAIRED_SURROGATE;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {string} [options.flags] - regular expression flags\n* @param {boolean} [options.capture] - boolean indicating whether to wrap a regular expression matching white space characters with a capture group\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'flags': 'gm'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'flags' ) ) {\n\t\topts.flags = options.flags;\n\t\tif ( !isString( opts.flags ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'flags', opts.flags ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'capture' ) ) {\n\t\topts.capture = options.capture;\n\t\tif ( !isBoolean( opts.capture ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'capture', opts.capture ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar validate = require( './validate.js' );\n\n\n// VARIABLES //\n\nvar REGEXP_STRING = '[\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u0085\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]';\n\n\n// MAIN //\n\n/**\n* Returns a regular expression to match a white space character.\n*\n* @param {Options} [options] - function options\n* @param {string} [options.flags=''] - regular expression flags\n* @param {boolean} [options.capture=false] - boolean indicating whether to wrap a regular expression matching white space characters with a capture group\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_WHITESPACE = reWhitespace();\n*\n* var bool = RE_WHITESPACE.test( ' ' );\n* // returns true\n*\n* bool = RE_WHITESPACE.test( '\\t' );\n* // returns true\n*\n* @example\n* var replace = require( '@stdlib/string/replace' );\n* var RE_WHITESPACE = reWhitespace({\n*     'capture': true\n* });\n*\n* var str = 'Duplicate capture';\n* var out = replace( str, RE_WHITESPACE, '$1$1' );\n* // returns 'Duplicate  capture'\n*/\nfunction reWhitespace( options ) {\n\tvar opts;\n\tvar err;\n\tif ( arguments.length > 0 ) {\n\t\topts = {};\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tif ( opts.capture ) {\n\t\t\treturn new RegExp( '('+REGEXP_STRING+')', opts.flags );\n\t\t}\n\t\treturn new RegExp( REGEXP_STRING, opts.flags );\n\t}\n\treturn /[\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u0085\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]/; // eslint-disable-line no-control-regex\n}\n\n\n// EXPORTS //\n\nmodule.exports = reWhitespace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to match a white space character.\n*\n* @module @stdlib/regexp/whitespace\n*\n* @example\n* var reWhitespace = require( '@stdlib/regexp/whitespace' );\n*\n* var RE_WHITESPACE = reWhitespace();\n*\n* var bool = RE_WHITESPACE.test( ' ' );\n* // returns true\n*\n* @example\n* var reWhitespace = require( '@stdlib/regexp/whitespace' );\n*\n* var RE_WHITESPACE = reWhitespace({\n*     'flags': 'gm'\n* });\n*\n* var bool = RE_WHITESPACE.test( '\\t' );\n* // returns true\n*\n* @example\n* var RE_WHITESPACE = require( '@stdlib/regexp/whitespace' ).REGEXP;\n*\n* var bool = RE_WHITESPACE.test( 'a' );\n* // returns false\n*\n* @example\n* var RE_WHITESPACE = require( '@stdlib/regexp/whitespace' ).REGEXP_CAPTURE;\n* var replace = require( '@stdlib/string/replace' );\n*\n* var str = 'Duplicate capture';\n* var out = replace( str, RE_WHITESPACE, '$1$1' );\n* // returns 'Duplicate  capture'\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar reWhitespace = require( './main.js' );\nvar REGEXP_CAPTURE = require( './regexp_capture.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( reWhitespace, 'REGEXP', REGEXP );\nsetReadOnly( reWhitespace, 'REGEXP_CAPTURE', REGEXP_CAPTURE );\n\n\n// EXPORTS //\n\nmodule.exports = reWhitespace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reWhitespace = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Matches a white space character.\n*\n* Regular expression: `/([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u0085\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF])/`\n*\n* -   `()`\n*     -   create a capture group\n*\n* -   `[]`\n*     -   match any one of the listed characters\n*\n* -   `\\u0009`\n*     -   character tabulation (horizontal tab; `\\t`)\n*\n* -   `\\u000A`\n*     -   line feed (LF; `\\n`)\n*\n* -   `\\u000B`\n*     -   line tabulation (vertical tab; `\\v`)\n*\n* -   `\\u000C`\n*     -   form feed (`\\f`)\n*\n* -   `\\u000D`\n*     -   carriage return (CR; `\\r`)\n*\n* -   `\\u0020`\n*     -   space (most common)\n*\n* -   `\\u0085`\n*     -   next line (NEL)\n*\n* -   `\\u00A0`\n*     -   non-breaking space\n*\n* -   `\\u1680`\n*     -   Ogham space mark\n*\n* -   `\\u2000`\n*     -   en quad\n*\n* -   `\\u2001`\n*     -   em quad\n*\n* -   `\\u2002`\n*     -   en space\n*\n* -   `\\u2003`\n*     -   em space\n*\n* -   `\\u2004`\n*\n*     -   three-per-em space (thick space)\n*\n* -   `\\u2005`\n*     -   four-per-em space (mid space)\n*\n* -   `\\u2006`\n*     -   six-per-em space\n*\n* -   `\\u2007`\n*     -   figure space\n*\n* -   `\\u2008`\n*     -   punctuation space\n*\n* -   `\\u2009`\n*     -   thin space\n*\n* -   `\\u200A`\n*     -   hair space\n*\n* -   `\\u2028`\n*     -   line separator\n*\n* -   `\\u2029`\n*     -   paragraph separator\n*\n* -   `\\u202F`\n*     -   narrow no-break space\n*\n* -   `\\u205F`\n*     -   medium mathematical space\n*\n* -   `\\u3000`\n*     -   ideographic space\n*\n* -   `\\uFEFF`\n*     -   zero width non-breaking space\n*\n* ## Notes\n*\n* -   Matches the 25 characters defined as white space (\"WSpace=Y\",\"WS\") characters in the Unicode 9.0 character database.\n* -   Matches one related white space character without the Unicode character property \"WSpace=Y\" (zero width non-breaking space which was deprecated as of Unicode 3.2).\n*\n* @constant\n* @type {RegExp}\n* @default /([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u0085\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF])/\n* @see [whitespace]{@link https://en.wikipedia.org/wiki/Whitespace_character}\n*/\nvar REGEXP_CAPTURE = reWhitespace({\n\t'capture': true\n});\n\n\n// EXPORTS //\n\nmodule.exports = REGEXP_CAPTURE;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reWhitespace = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Matches a white space character.\n*\n* Regular expression: `/[\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u0085\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]/`\n*\n* -   `[]`\n*     -   match any one of the listed characters\n*\n* -   `\\u0009`\n*     -   character tabulation (horizontal tab; `\\t`)\n*\n* -   `\\u000A`\n*     -   line feed (LF; `\\n`)\n*\n* -   `\\u000B`\n*     -   line tabulation (vertical tab; `\\v`)\n*\n* -   `\\u000C`\n*     -   form feed (`\\f`)\n*\n* -   `\\u000D`\n*     -   carriage return (CR; `\\r`)\n*\n* -   `\\u0020`\n*     -   space (most common)\n*\n* -   `\\u0085`\n*     -   next line (NEL)\n*\n* -   `\\u00A0`\n*     -   non-breaking space\n*\n* -   `\\u1680`\n*     -   Ogham space mark\n*\n* -   `\\u2000`\n*     -   en quad\n*\n* -   `\\u2001`\n*     -   em quad\n*\n* -   `\\u2002`\n*     -   en space\n*\n* -   `\\u2003`\n*     -   em space\n*\n* -   `\\u2004`\n*\n*     -   three-per-em space (thick space)\n*\n* -   `\\u2005`\n*     -   four-per-em space (mid space)\n*\n* -   `\\u2006`\n*     -   six-per-em space\n*\n* -   `\\u2007`\n*     -   figure space\n*\n* -   `\\u2008`\n*     -   punctuation space\n*\n* -   `\\u2009`\n*     -   thin space\n*\n* -   `\\u200A`\n*     -   hair space\n*\n* -   `\\u2028`\n*     -   line separator\n*\n* -   `\\u2029`\n*     -   paragraph separator\n*\n* -   `\\u202F`\n*     -   narrow no-break space\n*\n* -   `\\u205F`\n*     -   medium mathematical space\n*\n* -   `\\u3000`\n*     -   ideographic space\n*\n* -   `\\uFEFF`\n*     -   zero width non-breaking space\n*\n* ## Notes\n*\n* -   Matches the 25 characters defined as white space (\"WSpace=Y\",\"WS\") characters in the Unicode 9.0 character database.\n* -   Matches one related white space character without the Unicode character property \"WSpace=Y\" (zero width non-breaking space which was deprecated as of Unicode 3.2).\n*\n* @constant\n* @type {RegExp}\n* @default /[\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u0085\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]/\n* @see [whitespace]{@link https://en.wikipedia.org/wiki/Whitespace_character}\n*/\nvar REGEXP = reWhitespace();\n\n\n// EXPORTS //\n\nmodule.exports = REGEXP;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-read-only-property' ;\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace regexp\n*/\nvar regexp = {};\n\n/**\n* @name reBasename\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/basename}\n*/\nimport reBasename from './../basename';\nsetReadOnly( regexp, 'reBasename', reBasename );\n\n/**\n* @name reBasenamePosix\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/basename-posix}\n*/\nimport reBasenamePosix from './../basename-posix';\nsetReadOnly( regexp, 'reBasenamePosix', reBasenamePosix );\n\n/**\n* @name reBasenameWindows\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/basename-windows}\n*/\nimport reBasenameWindows from './../basename-windows';\nsetReadOnly( regexp, 'reBasenameWindows', reBasenameWindows );\n\n/**\n* @name reColorHexadecimal\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/color-hexadecimal}\n*/\nimport reColorHexadecimal from './../color-hexadecimal';\nsetReadOnly( regexp, 'reColorHexadecimal', reColorHexadecimal );\n\n/**\n* @name reDecimalNumber\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/decimal-number}\n*/\nimport reDecimalNumber from './../decimal-number';\nsetReadOnly( regexp, 'reDecimalNumber', reDecimalNumber );\n\n/**\n* @name reDirname\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/dirname}\n*/\nimport reDirname from './../dirname';\nsetReadOnly( regexp, 'reDirname', reDirname );\n\n/**\n* @name reDirnamePosix\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/dirname-posix}\n*/\nimport reDirnamePosix from './../dirname-posix';\nsetReadOnly( regexp, 'reDirnamePosix', reDirnamePosix );\n\n/**\n* @name reDirnameWindows\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/dirname-windows}\n*/\nimport reDirnameWindows from './../dirname-windows';\nsetReadOnly( regexp, 'reDirnameWindows', reDirnameWindows );\n\n/**\n* @name reEOL\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/eol}\n*/\nimport reEOL from './../eol';\nsetReadOnly( regexp, 'reEOL', reEOL );\n\n/**\n* @name reExtendedLengthPath\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/extended-length-path}\n*/\nimport reExtendedLengthPath from './../extended-length-path';\nsetReadOnly( regexp, 'reExtendedLengthPath', reExtendedLengthPath );\n\n/**\n* @name reExtname\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/extname}\n*/\nimport reExtname from './../extname';\nsetReadOnly( regexp, 'reExtname', reExtname );\n\n/**\n* @name reExtnamePosix\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/extname-posix}\n*/\nimport reExtnamePosix from './../extname-posix';\nsetReadOnly( regexp, 'reExtnamePosix', reExtnamePosix );\n\n/**\n* @name reExtnameWindows\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/extname-windows}\n*/\nimport reExtnameWindows from './../extname-windows';\nsetReadOnly( regexp, 'reExtnameWindows', reExtnameWindows );\n\n/**\n* @name reFilename\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/filename}\n*/\nimport reFilename from './../filename';\nsetReadOnly( regexp, 'reFilename', reFilename );\n\n/**\n* @name reFilenamePosix\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/filename-posix}\n*/\nimport reFilenamePosix from './../filename-posix';\nsetReadOnly( regexp, 'reFilenamePosix', reFilenamePosix );\n\n/**\n* @name reFilenameWindows\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/filename-windows}\n*/\nimport reFilenameWindows from './../filename-windows';\nsetReadOnly( regexp, 'reFilenameWindows', reFilenameWindows );\n\n/**\n* @name reFunctionName\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/function-name}\n*/\nimport reFunctionName from './../function-name';\nsetReadOnly( regexp, 'reFunctionName', reFunctionName );\n\n/**\n* @name reNativeFunction\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/native-function}\n*/\nimport reNativeFunction from './../native-function';\nsetReadOnly( regexp, 'reNativeFunction', reNativeFunction );\n\n/**\n* @name reRegExp\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/regexp}\n*/\nimport reRegExp from './../regexp';\nsetReadOnly( regexp, 'reRegExp', reRegExp );\n\n/**\n* @name reUncPath\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/unc-path}\n*/\nimport reUncPath from './../unc-path';\nsetReadOnly( regexp, 'reUncPath', reUncPath );\n\n/**\n* @name reUtf16SurrogatePair\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/utf16-surrogate-pair}\n*/\nimport reUtf16SurrogatePair from './../utf16-surrogate-pair';\nsetReadOnly( regexp, 'reUtf16SurrogatePair', reUtf16SurrogatePair );\n\n/**\n* @name reUtf16UnpairedSurrogate\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/utf16-unpaired-surrogate}\n*/\nimport reUtf16UnpairedSurrogate from './../utf16-unpaired-surrogate';\nsetReadOnly( regexp, 'reUtf16UnpairedSurrogate', reUtf16UnpairedSurrogate );\n\n/**\n* @name reWhitespace\n* @memberof regexp\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/regexp/whitespace}\n*/\nimport reWhitespace from './../whitespace';\nsetReadOnly( regexp, 'reWhitespace', reWhitespace );\n\n\n// EXPORTS //\n\nexport default regexp;\n"],"names":["main","reBasenamePosix","require$$1","require$$0","lib","reBasenameWindows","contains","format","posix","require$$2","win32","require$$3","IS_WINDOWS","require$$4","PLATFORMS","setReadOnly","REGEXP","reBasename","platform","arguments","length","Error","join","MODES","reColorHexadecimal","mode","isObject","hasOwnProp","isBoolean","isPrimitive","isString","validate","opts","options","flags","TypeError","capture","err","RegExp","reDecimalNumber","REGEXP_CAPTURE","reDirnamePosix","reDirnameWindows","reDirname","reEOL","reExtendedLengthPath","reExtnamePosix","reExtnameWindows","reExtname","reFilenamePosix","reFilenameWindows","reFilename","reFunctionName","str","Function","prototype","toString","call","replace","reNativeFunction","reRegExp","reUncPath","reUtf16SurrogatePair","reUtf16UnpairedSurrogate","REGEXP_STRING","reWhitespace","regexp"],"mappings":"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"}